{"version":3,"sources":["serviceWorker.js","firebase.js","ColorModeSwitcher.js","components/Navbar/Profile.js","components/Navbar/NavBar.js","contexts/AuthContext.js","components/login/Card.js","components/login/LoginForm.js","components/login/Login.js","components/Signup/SignUpForm.js","components/Signup/Signup.js","components/OcrApp.js","components/PrivateRoute.js","components/ForgotPass.js","components/Navbar/UpdateProfile.js","components/NotFound.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ocrdata","firestore","collection","formatDoc","doc","id","data","getCurrentTimestamp","FieldValue","serverTimestamp","auth","ColorModeSwitcher","props","toggleColorMode","useColorMode","SwitchIcon","useColorModeValue","FaMoon","FaSun","size","fontSize","base","md","variant","color","marginLeft","onClick","icon","Profile","useAuth","logout","currentUser","notifyLogout","toast","success","logoutfailed","history","useHistory","a","push","cursor","as","Avatar","name","email","p","bg","ReLink","to","NavBar","h","mb","alignItems","justifyContent","style","fontFamily","textDecoration","ml","fontWeight","lg","bgGradient","bgClip","w","colorScheme","mr","AuthContext","React","createContext","useContext","AuthProvider","children","useState","setCurrentUser","loading","setloading","provider","GoogleAuthProvider","useEffect","onAuthStateChanged","user","value","signup","password","createUserWithEmailAndPassword","signOut","signGoogle","signInWithPopup","forgotPassword","sendPasswordResetEmail","login","signInWithEmailAndPassword","updateEmail","updatePassword","Provider","Card","py","px","shadow","rounded","LoginForm","emailRef","useRef","passRef","setError","setLoading","notifySuc","handleSubmit","e","preventDefault","current","form","onSubmit","spacing","status","borderRadius","type","autoComplete","required","ref","marginBottom","disabled","Login","notifyFailed","cred","set","createdAt","userId","uid","maxW","mx","textAlign","mt","boxShadow","columns","borderWidth","borderColor","SignUpForm","passConRef","users","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","SignUp","OcrApp","useDisclosure","isOpen","onOpen","onClose","btnRef","file","setFile","ocr","setOcr","lang","setLang","fdata","setFdata","isOpenpop","setIsOpen","selectLng","setSelectLng","useToast","progress","setProgress","fileRef","bgColor","worker","createWorker","logger","m","doOCR","load","loadLanguage","initialize","recognize","text","title","duration","isClosable","onSnapshot","Object","values","userocrData","update","arrayUnion","docRef","placement","finalFocusRef","length","map","d","i","border","overflowY","Flex","maxH","direction","Circle","top","right","zIndex","MdCheck","accept","onChange","target","files","Center","src","URL","createObjectURL","alt","returnFocusOnClose","closeOnBlur","defaultValue","css","backgroundColor","width","jsPDF","save","downloadIt","bottom","MdFileDownload","clipboard","writeText","MdContentCopy","MdHistory","PrivateRoute","Component","component","rest","render","ForgotPassword","errorsuc","setErrorsuc","handleForgotpass","align","sm","UpdateProfile","promises","Promise","all","finally","placeholder","NotFound","App","theme","extendTheme","components","Button","baseStyle","_focus","path","ForgotPass","exact","ReactDOM","document","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bb3fb0ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain:  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId:  process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n\r\n})\r\n\r\nconst firestore = app.firestore() \r\nexport const database = {\r\n  \r\n    // files : firebase.collection('Files');\r\n    ocrdata: firestore.collection(\"users\"),\r\n    formatDoc : doc =>{\r\n        return {\r\n            id:doc.id,...doc.data()\r\n        }\r\n    },\r\n    getCurrentTimestamp:firebase.firestore.FieldValue.serverTimestamp\r\n}\r\n\r\nexport const auth = app.auth()\r\nexport default app;","import React from 'react';\r\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\n\r\nexport const ColorModeSwitcher = props => {\r\n  const { toggleColorMode } = useColorMode();\r\n  \r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"lg\"\r\n      fontSize={{base:\"20px\",md:\"25px\"}}\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  \r\n  useColorModeValue,\r\n  MenuButton,\r\n  MenuList,\r\n  Menu,\r\n  MenuItem,\r\n  \r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const { logout, currentUser } = useAuth();\r\n\r\n  const notifyLogout = () => toast.success(\"Logged Out\");\r\n  const logoutfailed = () => toast.success(\"Logged Out\");\r\n\r\n  const history = useHistory(\"\");\r\n  async function handleLogout() {\r\n   \r\n\r\n    try {\r\n      \r\n      \r\n      await logout();\r\n      notifyLogout();\r\n      history.push(\"/login\");\r\n    } catch {\r\n      logoutfailed();\r\n    }\r\n    \r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          cursor=\"pointer\"\r\n          as={Avatar}\r\n          size=\"md\"\r\n          name={currentUser.email}\r\n          color={useColorModeValue(\"black\", \"white\")}\r\n          p={5}\r\n          bg={useColorModeValue(\"gray.300\", \"gray.600\")}\r\n        ></MenuButton>\r\n        <MenuList>\r\n          <MenuItem as={ReLink} to=\"/update-profile\" >Update Profile </MenuItem>\r\n           <MenuItem\r\n            onClick={handleLogout   }\r\n           >Log out</MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Link,\r\n  Text,\r\n  Flex,\r\n  Spacer,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"../../ColorModeSwitcher\";\r\nimport Profile from \"./Profile\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function NavBar() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Flex\r\n      h={{base:\"70px\",md:\"100px\"}}\r\n      mb={{base:\"60px\",md:\"10px\"}}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n   \r\n      <Heading\r\n        as={ReLink}\r\n        to=\"/\"\r\n        style={{ fontFamily: \"'Press Start 2P' \", textDecoration: \"none\" }}\r\n        ml=\"20px\"\r\n        fontWeight=\"bold\"\r\n        fontSize={{base:\"20px\",md:\"45px\",lg:\"50px\"}}\r\n        bgGradient=\"linear(to-r, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n        w={{base:\"400px\", md:\"500px\",lg:\"500px\"}}\r\n      >\r\n        OCR APP\r\n      </Heading>\r\n      <Spacer\r\n      />\r\n      {!currentUser && (\r\n          <>\r\n          <Button colorScheme=\"light\" variant=\"ghost\" mr={{base:\"1px\",md:\"10px\"}}fontSize={{base:\"15px\",md:'20px'}}>\r\n            <Text as={ReLink} style={{ textDecoration: \"none\" }} as={ReLink} to=\"/signup\">\r\n              Sign Up\r\n            </Text>\r\n          </Button>\r\n            <Button colorScheme=\"light\" variant=\"ghost\" mr={{base:\"1px\",md:\"10px\"}} fontSize={{base:\"15px\",md:'20px'}}>\r\n            <Text as={ReLink} style={{ textDecoration: \"none\" }}  to=\"/login\">\r\n              Login\r\n              </Text>\r\n            </Button>\r\n       </>\r\n        \r\n      )}\r\n      {currentUser && (\r\n        <>\r\n          <Text mr=\"20px\" fontSize=\"sm\" color=\"gray.400\">\r\n            {currentUser.email}\r\n          </Text>\r\n          <Profile />\r\n        </>\r\n      )}\r\n      <ColorModeSwitcher  ml={{base:\"1px\",md:\"10px\"}} mr={{base:\"2px\",md:\"10px\"}} />\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth,database } from \"../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\nimport NavBar from \"../components/Navbar/NavBar.js\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setloading] = useState(true);\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signGoogle() {\r\n    return auth.signInWithPopup(provider);\r\n  }\r\n\r\n  function forgotPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email){\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password){\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n     \r\n\r\n      \r\n\r\n      // }  \r\n      setloading(false)\r\n    })\r\n    return unsubscribe \r\n  }, [ ]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    logout,\r\n    signGoogle,\r\n    forgotPassword,\r\n    login,\r\n    updateEmail,\r\n    updatePassword\r\n    \r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { Box, useColorModeValue } from '@chakra-ui/react'\r\nimport * as React from 'react'\r\n\r\nexport const Card = (props) => (\r\n  <Box\r\n    bg={useColorModeValue('white', 'gray.700')}\r\n    py=\"8\"\r\n    px={{\r\n      base: '4',\r\n      md: '10',\r\n    }}\r\n    shadow=\"base\"\r\n    rounded='lg'\r\n    {...props}\r\n  />\r\n)\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Text,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState, useRef,useEffect } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { database } from \"../../firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nexport default function LoginForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const { login, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const notifySuc = () => toast.success(\"Succsessfully Logged In\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passRef.current.value);\r\n      history.push(\"/\");\r\n      notifySuc();\r\n    } catch {\r\n      setError(\"Password or Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {currentUser && (\r\n            <Alert borderRadius=\"8\" status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>\r\n          )}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n              <Text\r\n                fontSize=\"md\"\r\n                as={ReLink}\r\n                color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n                to=\"/forgot-password\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                Forgot Password?\r\n              </Text>\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  VisuallyHidden,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport { FaFacebook, FaGithub, FaGoogle } from \"react-icons/fa\";\r\nimport { Card } from \"./Card\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { database } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const notifySuc = () => toast.success(error);\r\n  const notifyFailed = () => toast.success(error);\r\n  const { signGoogle, error } = useAuth();\r\n  async function handleGooleLogin(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await signGoogle().then(cred => {\r\n        // database.ocrdata.doc(cred.)\r\n        database.ocrdata.doc(cred.user.email).set(\r\n          {\r\n            email:cred.user.email,\r\n            createdAt: database.getCurrentTimestamp(),\r\n            userId:cred.user.uid\r\n          }\r\n        )\r\n      })     \r\n      notifySuc();\r\n      history.push(\"/\");\r\n    } catch {\r\n      notifyFailed();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n      <Heading textAlign=\"center\" fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\">\r\n        Login in Here\r\n      </Heading>\r\n\r\n      <Box as={ReLink}\r\n        to=\"/signup\">\r\n        <Text\r\n        \r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Box>\r\n        \r\n\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <LoginForm />\r\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n            disabled\r\n          >\r\n            <VisuallyHidden>Login with Facebook</VisuallyHidden>\r\n            <FaFacebook />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            onClick={handleGooleLogin}\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Google</VisuallyHidden>\r\n            <FaGoogle />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            disabled\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Github</VisuallyHidden>\r\n            <FaGithub />\r\n          </Button>\r\n        </SimpleGrid>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Box,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { database } from \"../../firebase\";\r\nimport { useState, useRef,useEffect } from \"react\";\r\n\r\nexport default function SignUpForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { signup,currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const notify1 = () => toast.error(\"Failed to create\");\r\n  const notifySuc = () => toast.success(\"Succsess\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Password Does Not Match!\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passRef.current.value).then(cred => {\r\n        // database.ocrdata.doc(cred.)\r\n        database.ocrdata.doc(cred.user.email).set(\r\n          {\r\n            email:cred.user.email,\r\n            createdAt: database.getCurrentTimestamp(),\r\n            userId:cred.user.uid\r\n          }\r\n        )\r\n      })       \r\n      history.push(\"/\");\r\n      users();\r\n      notifySuc();\r\n\r\n    } catch {\r\n      setError(\"Failed to Create Account!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\nfunction users(){\r\n  console.log(currentUser.email) \r\n  }    \r\n\r\n\r\n\r\n    \r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover={false}\r\n      />\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Stack spacing=\"3\">\r\n            {error && (\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                ref={emailRef}\r\n               \r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"conpassword\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"lg\"\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </FormControl>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Heading, Text, Link, useColorModeValue } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Card } from \"../login/Card\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nconst SignUp = () => (\r\n  <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n    \r\n    <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\" >\r\n      Sign Up Here\r\n    </Heading>\r\n    <Box as={ReLink}\r\n        to=\"/login\">\r\n        <Text\r\n        \r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Already have an account?\r\n        </Text>\r\n      </Box>\r\n    \r\n    <Card boxShadow=\"dark-lg\">\r\n      <SignUpForm />\r\n    </Card>\r\n  </Box>\r\n);\r\n\r\nexport default SignUp;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Input,\r\n  Container,\r\n  Spacer,\r\n  Image,\r\n  Flex,\r\n  Progress,\r\n  RadioGroup,\r\n  Radio,\r\n  Center,\r\n  Circle,\r\n  Icon,\r\n  useToast,\r\n  Heading,\r\n  Stack,\r\n  Skeleton,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  MdCheck,\r\n  MdFileDownload,\r\n  MdContentCopy,\r\n  MdHistory,\r\n} from \"react-icons/md\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorModeValue } from \"@chakra-ui/react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { database } from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction OcrApp() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef();\r\n  const [file, setFile] = useState(null);\r\n  const [ocr, setOcr] = useState(\"\");\r\n  const [lang, setLang] = useState(\"eng\");\r\n  const [fdata, setFdata] = useState([]);\r\n  const [isOpenpop, setIsOpen] = useState(false);\r\n  const [selectLng, setSelectLng] = useState(false);\r\n  const close = () => setIsOpen(false);\r\n  const closelng = () => setSelectLng(false);\r\n\r\n  const toast = useToast();\r\n  const [progress, setProgress] = useState(\"0\");\r\n  const fileRef = useRef();\r\n  const { currentUser } = useAuth();\r\n\r\n  const bgColor = useColorModeValue(\"gray.900\", \"gray.700\");\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => setProgress(m.progress * 100),\r\n  });\r\n\r\n  const doOCR = async () => {\r\n    try {\r\n      await worker.load();\r\n      await worker.loadLanguage(lang);\r\n      await worker.initialize(lang);\r\n      const {\r\n        data: { text },\r\n      } = await worker.recognize(file);\r\n      setOcr(text);\r\n    } catch {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"There a error\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file === null) {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Please Select A File\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n\r\n        isClosable: true,\r\n      });\r\n    }\r\n    doOCR();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    } else {\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef.onSnapshot((doc) => {\r\n        setFdata(Object.values(doc.data().userocrData));\r\n        console.log(\"Current data: \", Object.values(doc.data().userocrData));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (file !== null) {\r\n      setSelectLng(!selectLng);\r\n    }\r\n    else{\r\n      return\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    }\r\n    if (ocr !== \"\") {\r\n      console.log(\"done\");\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef\r\n        .update({\r\n          userocrData: firebase.firestore.FieldValue.arrayUnion(ocr),\r\n        })\r\n        .then((docRef) => {\r\n          console.log(docRef);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      setIsOpen(!isOpenpop);\r\n    }\r\n  }, [ocr, currentUser, database]);\r\n\r\n  // const userocrData =  fdata.length ?  (\r\n  //   Object.values(fdata).map((data ,i) => {\r\n  //     return(\r\n\r\n  //     )\r\n  //   })\r\n  // ) : (<Heading> None Data </Heading>)\r\n\r\n  const copyIt = () => {\r\n    navigator.clipboard.writeText(ocr);\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Copied\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  // function ReadtocrData() {\r\n  //   var updateArrayRef = database.ocrdata.doc(currentUser.email);\r\n  //   updateArrayRef.update({\r\n  //     ocrdata:firebase.firestore.FieldValue.arrayUnion(ocr)\r\n  //   })\r\n  //   .then((docRef) => {\r\n  //     console.log(docRef);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(\"Error adding document: \", error);\r\n  //   });\r\n  // }\r\n\r\n  const handlecopytoClip = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Copy\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return copyIt();\r\n    }\r\n  };\r\n  const downloadIt = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(ocr, 20, 20);\r\n    doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Downloaded\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  const handleDownload = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Download\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return downloadIt();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n       \r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>\r\n              <Heading>History</Heading>{\" \"}\r\n            </DrawerHeader>\r\n\r\n            <DrawerBody\r\n            \r\n            \r\n            >\r\n              <Text color={useColorModeValue(\"gray\")} mb=\"10px\">\r\n                {currentUser && currentUser.email}\r\n              </Text>\r\n              \r\n                {fdata &&\r\n                  fdata.length > 0 &&\r\n                  fdata.map((d, i) => (\r\n                    <Box\r\n                    \r\n                      h=\"120px\"\r\n                      p={2}\r\n                      cursor=\"pointer\"\r\n                      borderRadius=\"10px\"\r\n                      fontSize=\"14px\"\r\n                      boxShadow=\"lg\"\r\n                      border=\"lightgray solid 1px\"\r\n                      overflowY=\"auto\"\r\n                      mb=\"20px\"\r\n                      key={i}\r\n                    >\r\n                      {\" \"}\r\n                      <Text key={i} color=\"useColorModeValue('white','black')\">\r\n                        {d}\r\n                      </Text>\r\n                    </Box>\r\n                  ))}\r\n            \r\n            </DrawerBody>\r\n\r\n            \r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n      <Container maxW=\"85%\" as={Flex} maxH=\"lg\">\r\n        <Flex\r\n          direction=\"column\"\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          position=\"relative\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          mr=\"50px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n        >\r\n          <Box\r\n            onClick={handleOnClick}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            top=\"200px\"\r\n            right=\"-70px\"\r\n            size=\"90px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n            zIndex=\"4\"\r\n          >\r\n            <Icon fontSize=\"40px\" as={MdCheck} />\r\n          </Box>\r\n          <Center mt={2}>\r\n            <Box>\r\n              <Input\r\n                h=\"50px\"\r\n                ref={fileRef}\r\n                type=\"file\"\r\n                variant=\"ghost\"\r\n                accept=\".bmp,.jpg,.png,.pbm\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Box as={Center} w=\"100%\" h=\"300px\">\r\n            <Image\r\n              p={2}\r\n              maxW=\"100%\"\r\n              maxH=\"80%\"\r\n              src={file ? URL.createObjectURL(file) : null}\r\n              alt={file ? file.name : null}\r\n            ></Image>\r\n          </Box>\r\n\r\n          <Spacer />\r\n\r\n          <Progress\r\n            m={2}\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            borderRadius=\"50px\"\r\n            value={progress}\r\n          />\r\n\r\n          <Box\r\n            as={Center}\r\n            boxShadow=\"dark-lg\"\r\n            borderRadius=\"15px\"\r\n            w=\"100%\"\r\n            h=\"80px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n          >\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={selectLng}\r\n              onClose={closelng}\r\n              placement=\"right-start\"\r\n              closeOnBlur={true}\r\n              \r\n            >\r\n              <PopoverTrigger>\r\n                <RadioGroup\r\n                  defaultValue=\"eng\"\r\n                  color={useColorModeValue(\"white\")}\r\n                  w=\"100%\"\r\n                >\r\n                  <Flex direction=\"row\">\r\n                    <Radio\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      w=\"33.3333%\"\r\n                      value=\"eng\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      English\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      colorScheme=\"green\"\r\n                      justifyContent=\"center\"\r\n                      value=\"hin\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Hindi\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      value=\"mar\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Marathi\r\n                    </Radio>\r\n                  </Flex>\r\n                </RadioGroup>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser && currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>\r\n                  Select the Language that File cantains!\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n          position=\"relative\"\r\n        >\r\n          <Box\r\n            w=\"100%\"\r\n            overflowY=\"auto\"\r\n            css={{\r\n              \"&::-webkit-scrollbar\": {\r\n                backgroundColor: useColorModeValue(\"gray\", \"black\"),\r\n                borderRadius: \"10px\",\r\n                width: \"8px\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                borderRadius: \"10px\",\r\n                backgroundColor: useColorModeValue(\"gray.900\", \"gray\"),\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                borderRadius: \"10px\",\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                backgroundColor: useColorModeValue(\"black\", \"white\"),\r\n              },\r\n            }}\r\n          >\r\n            <Text p={4}>{ocr}</Text>\r\n          </Box>\r\n\r\n          <Box\r\n            onClick={handleDownload}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom=\"5px\"\r\n            right=\"-60px\"\r\n            size=\"50px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"25px\" as={MdFileDownload} />\r\n          </Box>\r\n          <Box\r\n            onClick={handlecopytoClip}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom=\"80px\"\r\n            right=\"-60px\"\r\n            size=\"50px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"20px\" as={MdContentCopy} />\r\n          </Box>\r\n\r\n          {currentUser && (\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={isOpenpop}\r\n              onClose={close}\r\n              placement=\"auto-end\"\r\n              closeOnBlur={false}\r\n            >\r\n              <PopoverTrigger>\r\n                <Box\r\n                  onClick={onOpen}\r\n                  ref={btnRef}\r\n                  cursor=\"pointer\"\r\n                  boxShadow=\"dark-lg\"\r\n                  as={Circle}\r\n                  position=\"absolute\"\r\n                  bottom=\"155px\"\r\n                  right=\"-60px\"\r\n                  size=\"50px\"\r\n                  bg={bgColor}\r\n                  color=\"white\"\r\n                >\r\n                  <Icon fontSize=\"20px\" as={MdHistory} />\r\n                </Box>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>Check your OCR History Here!</PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n        </Flex>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OcrApp;\r\n","  \r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        \r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" /> \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  Box,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useColorModeValue,\r\n  AlertIcon,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { Card } from \"./login/Card\";\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { forgotPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [errorsuc, setErrorsuc] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleForgotpass(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setErrorsuc(\"\");\r\n      setLoading(true);\r\n      await forgotPassword(emailRef.current.value);\r\n      setErrorsuc(\"Check Your Email for Reset Link\");\r\n    } catch {\r\n      setError(\"Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{ base: \"90%\", md: \"450px\" }} mx=\"auto\">\r\n      <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\">\r\n        Forgot Password\r\n      </Heading>\r\n\r\n      <Link as={ReLink} to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n        <Text\r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          align=\"center\"\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n        >\r\n          {\" \"}\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Link>\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <chakra.form onSubmit={handleForgotpass}>\r\n          <Stack spacing=\"4\">\r\n            {error && (\r\n              <Alert\r\n                status=\"error\"\r\n                rounded={{\r\n                  sm: \"lg\",\r\n                }}\r\n              >\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            {errorsuc && (\r\n              <Alert status=\"success\">\r\n                <AlertIcon />\r\n                {errorsuc}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                ref={emailRef}\r\n              />\r\n            </Box>\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"md\"\r\n              onClick={handleForgotpass}\r\n              disabled={loading}\r\n            >\r\n              Reset Password\r\n            </Button>{\" \"}\r\n          </Stack>\r\n        </chakra.form>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Card } from \"../login/Card\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  \r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passRef.current.value) {\r\n      promises.push(updatePassword(passRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n    \r\n    <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n\r\n<Heading textAlign=\"center\" fontSize={{base:\"30px\",md:\"40px\"}} mb={10} fontWeight=\"extrabold\">\r\n        Update Profile\r\n      </Heading>\r\n    <Card>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          { currentUser && (<Alert status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>)}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              placeholder={currentUser.email}\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n          <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </Card>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Heading,Link } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport {Link as ReLink} from \"react-router-dom\"\r\n\r\n\r\nconst NotFound = () =>\r\n\r\n    \r\n\r\n  <div>\r\n    <h3>404 page not found</h3>\r\n    <p>We are sorry but the page you are looking for does not exist.</p>\r\n    <Link as={ReLink} to=\"/\"> \r\n        <Heading>Login or Signup</Heading>\r\n    </Link>\r\n\r\n  </div>\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\r\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\r\nimport Login from \"./components/login/Login\";\r\nimport SignUp from \"./components/Signup/Signup\";\r\nimport OcrApp from \"./components/OcrApp\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/NavBar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport UpdateProfile from \"./components/Navbar/UpdateProfile\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nfunction App() {\r\n  const theme = extendTheme({\r\n    components: {\r\n      Button: {\r\n        baseStyle: {\r\n          _focus: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },    \r\n    },\r\n  });\r\n  return (\r\n    <AuthProvider>\r\n      <ChakraProvider theme={theme}>\r\n        <Router>\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/forgot-password\" component={ForgotPass} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/update-profile\"\r\n              component={UpdateProfile}\r\n            />\r\n            <Route exact path=\"/\" component={OcrApp} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </ChakraProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ColorModeScript,Box } from \"@chakra-ui/react\";\r\nimport React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n \r\n    <ColorModeScript />\r\n    <App /> \r\n\r\n    \r\n  </StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}