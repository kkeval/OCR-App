{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/login/Card.js","components/login/LoginForm.js","components/login/Login.js","components/Signup/SignUpForm.js","components/Signup/Signup.js","components/OcrApp.js","ColorModeSwitcher.js","components/Navbar/Profile.js","components/Navbar/NavBar.js","components/PrivateRoute.js","components/ForgotPass.js","components/Navbar/UpdateProfile.js","components/NotFound.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","collection","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setloading","provider","GoogleAuthProvider","useEffect","unsubscribe","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","logout","signOut","signGoogle","signInWithPopup","forgotPassword","sendPasswordResetEmail","login","signInWithEmailAndPassword","updateEmail","updatePassword","Provider","Card","props","bg","useColorModeValue","py","px","base","md","shadow","rounded","sm","LoginForm","emailRef","useRef","passRef","error","setError","setLoading","history","useHistory","notifySuc","toast","success","handleSubmit","e","a","preventDefault","current","push","form","onSubmit","spacing","status","borderRadius","name","type","autoComplete","required","ref","fontSize","as","ReLink","color","to","style","textDecoration","marginBottom","colorScheme","size","onClick","disabled","Login","notifyFailed","maxW","mx","textAlign","fontWeight","mt","mb","align","boxShadow","columns","variant","borderWidth","borderColor","SignUpForm","passConRef","notify1","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","SignUp","fontFamily","OcrApp","useDisclosure","isOpen","onOpen","onClose","btnRef","file","setFile","ocr","setOcr","lang","setLang","useToast","progress","setProgress","fileRef","bgColor","worker","createWorker","logger","m","doOCR","load","loadLanguage","initialize","recognize","text","data","title","duration","isClosable","placement","finalFocusRef","height","Flex","direction","h","w","mr","cursor","Circle","top","right","zIndex","MdCheck","accept","onChange","target","files","Center","p","maxH","src","URL","createObjectURL","alt","defaultValue","justifyContent","overflowY","doc","jsPDF","save","downloadIt","bottom","MdFileDownload","navigator","clipboard","writeText","MdContentCopy","MdHistory","ColorModeSwitcher","toggleColorMode","useColorMode","SwitchIcon","FaMoon","FaSun","marginLeft","icon","Profile","notifyLogout","logoutfailed","Avatar","NavBar","alignItems","ml","bgGradient","bgClip","PrivateRoute","Component","component","rest","render","ForgotPassword","errorsuc","setErrorsuc","handleForgotpass","UpdateProfile","promises","Promise","all","then","catch","finally","placeholder","NotFound","App","theme","extendTheme","components","Button","baseStyle","_focus","path","ForgotPass","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eeb84546.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n    \r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain:  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId:  process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n\r\n})\r\nconst firestore = app.firestore() \r\nexport const database = {\r\n    ocrdata: firestore.collection(\"alldata\")\r\n}\r\n\r\nexport const auth = app.auth()\r\nexport default app;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setloading] = useState(true);\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signGoogle() {\r\n    return auth.signInWithPopup(provider);\r\n  }\r\n\r\n  function forgotPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email){\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password){\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setloading(false)\r\n    })\r\n    return ()=> unsubscribe \r\n  }, [ ]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    logout,\r\n    signGoogle,\r\n    forgotPassword,\r\n    login,\r\n    updateEmail,\r\n    updatePassword\r\n    \r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { Box, useColorModeValue } from '@chakra-ui/react'\r\nimport * as React from 'react'\r\n\r\nexport const Card = (props) => (\r\n  <Box\r\n    bg={useColorModeValue('white', 'gray.700')}\r\n    py=\"8\"\r\n    px={{\r\n      base: '4',\r\n      md: '10',\r\n    }}\r\n    shadow=\"base\"\r\n    rounded={{\r\n      sm: 'lg',\r\n    }}\r\n    {...props}\r\n  />\r\n)\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Text,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nexport default function LoginForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const { login, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const notifySuc = () => toast.success(\"Succsessfully Logged In\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passRef.current.value);\r\n      history.push(\"/\");\r\n      notifySuc();\r\n    } catch {\r\n      setError(\"Password or Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {currentUser && (\r\n            <Alert borderRadius=\"8\" status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>\r\n          )}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n              <Text\r\n                fontSize=\"md\"\r\n                as={ReLink}\r\n                color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n                to=\"/forgot-password\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                Forgot Password?\r\n              </Text>\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  VisuallyHidden,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport { FaFacebook, FaGithub, FaGoogle } from \"react-icons/fa\";\r\nimport { Card } from \"./Card\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const notifySuc = () => toast.success(error);\r\n  const notifyFailed = () => toast.success(error);\r\n  const { signGoogle, error } = useAuth();\r\n  async function handleGooleLogin(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await signGoogle();\r\n      notifySuc();\r\n      history.push(\"/\");\r\n    } catch {\r\n      notifyFailed();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box maxW=\"md\" mx=\"auto\">\r\n      <Heading textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\">\r\n        Login in to your account\r\n      </Heading>\r\n\r\n      <Link as={ReLink} to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n        <Text\r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          align=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"md\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          {\" \"}\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Link>\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <LoginForm />\r\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n            disabled\r\n          >\r\n            <VisuallyHidden>Login with Facebook</VisuallyHidden>\r\n            <FaFacebook />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            onClick={handleGooleLogin}\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Google</VisuallyHidden>\r\n            <FaGoogle />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            disabled\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Github</VisuallyHidden>\r\n            <FaGithub />\r\n          </Button>\r\n        </SimpleGrid>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Box,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nexport default function SignUpForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { signup } = useAuth();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const notify1 = () => toast.error(\"Failed to create\");\r\n  const notifySuc = () => toast.success(\"Succsess\");\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Password Does Not Match!\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passRef.current.value);\r\n      setError(\"Failed to Create Account!\");\r\n      notifySuc();\r\n      history.push(\"/\");\r\n    } catch {\r\n      notify1();\r\n    }\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover={false}\r\n      />\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Stack spacing=\"3\">\r\n            {error && (\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                // name=\"email\"\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                autoComplete=\"email\"\r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"lg\"\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </FormControl>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Heading, Text, Link, useColorModeValue } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Card } from \"../login/Card\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nconst SignUp = () => (\r\n  <Box maxW=\"md\" mx=\"auto\">\r\n    <Heading textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\" >\r\n      Sign Up Here\r\n    </Heading>\r\n    <Link as={ReLink} to=\"/login\" style={{textDecoration:\"none\"}} color={useColorModeValue(\"blue.500\",\"blue.200\")} >\r\n      <Text mt=\"2\" mb=\"5\" align=\"center\" maxW=\"md\" fontWeight=\"medium\" fontFamily=\"heading\">\r\n        Already have an account?\r\n      </Text>\r\n    </Link>\r\n    <Card boxShadow=\"dark-lg\">\r\n      <SignUpForm />\r\n    </Card>\r\n  </Box>\r\n);\r\n\r\nexport default SignUp;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Input,\r\n  Container,\r\n  Spacer,\r\n  Image,\r\n  Flex,\r\n  Progress,\r\n  RadioGroup,\r\n  Radio,\r\n  Center,\r\n  Circle,\r\n  Icon,\r\n  useToast,\r\n  Heading,\r\n  Stack,\r\n  Skeleton,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  MdCheck,\r\n  MdFileDownload,\r\n  MdContentCopy,\r\n  MdHistory,\r\n} from \"react-icons/md\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorModeValue } from \"@chakra-ui/react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction OcrApp() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const btnRef = useRef();\r\n  const [file, setFile] = useState(null);\r\n  const [ocr, setOcr] = useState(\"\");\r\n  const [lang, setLang] = useState(\"eng\");\r\n  const toast = useToast();\r\n  const [progress, setProgress] = useState(\"0\");\r\n  const fileRef = useRef();\r\n  const { currentUser } = useAuth();\r\n  const bgColor = useColorModeValue(\"gray.900\", \"gray.700\");\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => setProgress(m.progress * 100),\r\n  });\r\n\r\n  const doOCR = async () => {\r\n    try {\r\n      await worker.load();\r\n      await worker.loadLanguage(lang);\r\n      await worker.initialize(lang);\r\n      const {\r\n        data: { text },\r\n      } = await worker.recognize(file);\r\n      setOcr(text);\r\n    } catch {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"There a error\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file === null) {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Please Select A File\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    doOCR();\r\n  };\r\n  const copyIt = () => {\r\n    navigator.clipboard.writeText(ocr);\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Copied\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const handlecopytoClip = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Copy\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return copyIt();\r\n    }\r\n  };\r\n  const downloadIt = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(ocr, 20, 20);\r\n    doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Downloaded\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  const handleDownload = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Download\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return downloadIt();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>\r\n              <Heading>History</Heading>{\" \"}\r\n            </DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <Text color={useColorModeValue(\"gray\")}>{currentUser && currentUser.email}</Text>\r\n              <Stack mt={10} spacing={2}>\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n              </Stack>\r\n              <Stack mt={5} spacing={2}>\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n              </Stack>\r\n              <Stack mt={5} spacing={2}>\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n              </Stack>\r\n              <Stack mt={5} spacing={2}>\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n                <Skeleton height=\"30px\" />\r\n              </Stack>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter></DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n      <Container maxW=\"85%\" as={Flex} direction=\"row\" h=\"lg\" w=\"100%\">\r\n        <Flex\r\n          direction=\"column\"\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          position=\"relative\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          mr=\"50px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n        >\r\n          <Box\r\n            onClick={handleOnClick}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            top=\"200px\"\r\n            right=\"-70px\"\r\n            size=\"90px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n            zIndex=\"4\"\r\n          >\r\n            <Icon fontSize=\"40px\" as={MdCheck} />\r\n          </Box>\r\n          <Center mt={2}>\r\n            <Box>\r\n              <Input\r\n                h=\"50px\"\r\n                ref={fileRef}\r\n                type=\"file\"\r\n                variant=\"ghost\"\r\n                accept=\".bmp,.jpg,.png,.pbm\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Box as={Center} w=\"100%\" h=\"300px\">\r\n            <Image\r\n              p={2}\r\n              maxW=\"100%\"\r\n              maxH=\"80%\"\r\n              src={file ? URL.createObjectURL(file) : null}\r\n              alt={file ? file.name : null}\r\n            ></Image>\r\n          </Box>\r\n\r\n          <Spacer />\r\n\r\n          <Progress\r\n            m={2}\r\n            colorScheme=\"gray\"\r\n            size=\"lg\"\r\n            borderRadius=\"50px\"\r\n            value={progress}\r\n          />\r\n\r\n          <Box\r\n            as={Center}\r\n            boxShadow=\"dark-lg\"\r\n            borderRadius=\"15px\"\r\n            w=\"100%\"\r\n            h=\"80px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n          >\r\n            <RadioGroup\r\n              defaultValue=\"eng\"\r\n              color={useColorModeValue(\"white\")}\r\n              w=\"100%\"\r\n            >\r\n              <Flex direction=\"row\">\r\n                <Radio\r\n                  justifyContent=\"center\"\r\n                  colorScheme=\"green\"\r\n                  w=\"33.3333%\"\r\n                  value=\"eng\"\r\n                  onChange={(e) => setLang(e.target.value)}\r\n                >\r\n                  English\r\n                </Radio>\r\n                <Radio\r\n                  w=\"33.3333%\"\r\n                  colorScheme=\"green\"\r\n                  justifyContent=\"center\"\r\n                  value=\"hin\"\r\n                  onChange={(e) => setLang(e.target.value)}\r\n                >\r\n                  Hindi\r\n                </Radio>\r\n                <Radio\r\n                  w=\"33.3333%\"\r\n                  justifyContent=\"center\"\r\n                  colorScheme=\"green\"\r\n                  value=\"mar\"\r\n                  onChange={(e) => setLang(e.target.value)}\r\n                >\r\n                  Marathi\r\n                </Radio>\r\n              </Flex>\r\n            </RadioGroup>\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n          position=\"relative\"\r\n        >\r\n          <Box w=\"100%\" overflowY=\"scroll\">\r\n            <Text p={4}>{ocr}</Text>\r\n          </Box>\r\n\r\n          <Box\r\n            onClick={handleDownload}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom=\"5px\"\r\n            right=\"-60px\"\r\n            size=\"50px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"25px\" as={MdFileDownload} />\r\n          </Box>\r\n          <Box\r\n            onClick={handlecopytoClip}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom=\"80px\"\r\n            right=\"-60px\"\r\n            size=\"50px\"\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"20px\" as={MdContentCopy} />\r\n          </Box>\r\n\r\n          {currentUser && (\r\n            <Box\r\n              onClick={onOpen}\r\n              ref={btnRef}\r\n              cursor=\"pointer\"\r\n              boxShadow=\"dark-lg\"\r\n              as={Circle}\r\n              position=\"absolute\"\r\n              bottom=\"155px\"\r\n              right=\"-60px\"\r\n              size=\"50px\"\r\n              bg={bgColor}\r\n              color=\"white\"\r\n            >\r\n              <Icon fontSize=\"20px\" as={MdHistory} />\r\n            </Box>\r\n          )}\r\n        </Flex>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OcrApp;\r\n","import React from 'react';\r\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\n\r\nexport const ColorModeSwitcher = props => {\r\n  const { toggleColorMode } = useColorMode();\r\n  \r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"lg\"\r\n      fontSize=\"25px\"\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  \r\n  useColorModeValue,\r\n  MenuButton,\r\n  MenuList,\r\n  Menu,\r\n  MenuItem,\r\n  \r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const { logout, currentUser } = useAuth();\r\n\r\n  const notifyLogout = () => toast.success(\"Logged Out\");\r\n  const logoutfailed = () => toast.success(\"Logged Out\");\r\n\r\n  const history = useHistory(\"\");\r\n  async function handleLogout() {\r\n   \r\n\r\n    try {\r\n      \r\n      \r\n      await logout();\r\n      notifyLogout();\r\n      history.push(\"/login\");\r\n    } catch {\r\n      logoutfailed();\r\n    }\r\n    \r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          cursor=\"pointer\"\r\n          as={Avatar}\r\n          size=\"md\"\r\n          name={currentUser.email}\r\n          color={useColorModeValue(\"black\", \"white\")}\r\n          p={5}\r\n          bg={useColorModeValue(\"gray.300\", \"gray.600\")}\r\n        ></MenuButton>\r\n        <MenuList>\r\n          <MenuItem as={ReLink} to=\"/update-profile\" >Update Profile </MenuItem>\r\n           <MenuItem\r\n            onClick={handleLogout   }\r\n           >Log out</MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link as ReLink } from \"react-router-dom\"\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Link,\r\n  Text,\r\n  Flex,\r\n  Spacer,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"../../ColorModeSwitcher\";\r\nimport Profile from \"./Profile\";\r\n\r\nexport default function NavBar() {\r\n  const {currentUser} = useAuth();\r\n  return (\r\n    <Flex\r\n      w=\"100%\"\r\n      h=\"6em\"\r\n      mb=\"40px\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover={false}\r\n      />      \r\n      <Heading\r\n       \r\n        as={ReLink}\r\n        to=\"/\"\r\n        style={{ fontFamily: \"'Press Start 2P' \",  textDecoration: \"none\"}}\r\n        ml=\"20px\"\r\n        fontWeight=\"bold\"\r\n        fontSize=\"45px\"\r\n        bgGradient=\"linear(to-r, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n      >OCR APP\r\n      </Heading>\r\n      <Spacer />\r\n      {!currentUser && (\r\n        <Box>\r\n          <Link style={{ textDecoration: \"none\" }} as={ReLink} to=\"/signup\">\r\n            <Button colorScheme=\"light\" variant=\"ghost\" mr=\"2\" fontSize=\"lg\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n          <Link style={{ textDecoration: \"none\" }} as={ReLink} to=\"/login\">\r\n            <Button colorScheme=\"light\" variant=\"ghost\" mr=\"2\" fontSize=\"lg\">\r\n              Login\r\n            </Button>\r\n          </Link>\r\n        </Box>\r\n      )}\r\n      {currentUser && (\r\n        <>\r\n          <Text mr=\"20px\" fontSize=\"sm\" color=\"gray.400\">\r\n            {\" \"}\r\n            {currentUser.email}{\" \"}\r\n          </Text>\r\n          <Profile />\r\n        </>\r\n      )}\r\n      <ColorModeSwitcher ml=\"10px\" mr=\"10px\" />\r\n    </Flex>\r\n  );\r\n}\r\n","  \r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        \r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" /> \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  Box,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useColorModeValue,\r\n  AlertIcon,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useState, useRef } from \"react\";\r\nimport {Link as ReLink} from \"react-router-dom\"\r\nimport {Card} from \"./login/Card\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { forgotPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [errorsuc, setErrorsuc] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  async function handleForgotpass(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setErrorsuc(\"\");\r\n      setLoading(true);\r\n      await forgotPassword(emailRef.current.value);\r\n      setErrorsuc(\"Check Your Email for Reset Link\")\r\n    \r\n    } catch {\r\n      setError(\"Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Box maxW=\"md\" mx=\"auto\" >\r\n\r\n<Heading textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\">\r\n        Forgot Password\r\n      </Heading>\r\n     \r\n       \r\n      <Link as={ReLink} to=\"/signup\" style={{textDecoration:\"none\"}}>\r\n      <Text mt=\"2\" mb=\"5\" align=\"center\" maxW=\"md\" fontWeight=\"medium\"  color={useColorModeValue(\"blue.500\",\"blue.200\")}> Don&apos;t have an account? </Text>\r\n        </Link>\r\n  \r\n\r\n    <Card boxShadow=\"dark-lg\">\r\n      <chakra.form onSubmit={handleForgotpass}>\r\n        <Stack spacing=\"4\">\r\n          {error && (\r\n            <Alert status=\"error\"  rounded={{\r\n                sm: \"lg\",\r\n              }}>\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )} \r\n           {errorsuc && (\r\n            <Alert status=\"success\">\r\n              <AlertIcon />\r\n              {errorsuc}\r\n            </Alert>\r\n          )}\r\n          <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            autoComplete=\"email\"\r\n            required\r\n            ref={emailRef}\r\n          />\r\n          </Box>\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleForgotpass}\r\n            disabled={loading}\r\n          >\r\n            Reset Password\r\n          </Button>{\" \"}\r\n        </Stack>\r\n      </chakra.form>\r\n    </Card>\r\n   </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Card } from \"../login/Card\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  \r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passRef.current.value) {\r\n      promises.push(updatePassword(passRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n    \r\n    <Box maxW=\"md\" mx=\"auto\" >\r\n\r\n<Heading textAlign=\"center\" size=\"xl\" mb={10} fontWeight=\"extrabold\">\r\n        Update Profile\r\n      </Heading>\r\n    <Card>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          { currentUser && (<Alert status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>)}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              placeholder={currentUser.email}\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n          <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </Card>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Heading,Link } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport {Link as ReLink} from \"react-router-dom\"\r\n\r\n\r\nconst NotFound = () =>\r\n\r\n    \r\n\r\n  <div>\r\n    <h3>404 page not found</h3>\r\n    <p>We are sorry but the page you are looking for does not exist.</p>\r\n    <Link as={ReLink} to=\"/\"> \r\n        <Heading>Login or Signup</Heading>\r\n    </Link>\r\n\r\n  </div>\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\r\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\r\nimport Login from \"./components/login/Login\";\r\nimport SignUp from \"./components/Signup/Signup\";\r\nimport OcrApp from \"./components/OcrApp\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/NavBar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport UpdateProfile from \"./components/Navbar/UpdateProfile\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nfunction App() {\r\n  const theme = extendTheme({\r\n    components: {\r\n      Button: {\r\n        baseStyle: {\r\n          _focus: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ChakraProvider theme={theme}>\r\n        <Router>\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            \r\n            <Route  path=\"/login\" component={Login} />\r\n            <Route  path=\"/signup\" component={SignUp} />\r\n            <Route  path=\"/forgot-password\" component={ForgotPass} />\r\n            <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile} />\r\n            <Route exact path=\"/\" component={OcrApp} />\r\n            <Route component={NotFound}/>\r\n          \r\n          </Switch>\r\n        </Router>\r\n      </ChakraProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ColorModeScript />\r\n    <App />\r\n  </StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}