{"version":3,"sources":["serviceWorker.js","firebase.js","ColorModeSwitcher.js","components/Navbar/Profile.js","components/Navbar/NavBar.js","contexts/AuthContext.js","components/login/Card.js","components/login/LoginForm.js","components/login/Login.js","components/Signup/SignUpForm.js","components/Signup/Signup.js","components/OcrApp.js","components/PrivateRoute.js","components/ForgotPass.js","components/Navbar/UpdateProfile.js","components/NotFound.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ocrdata","firestore","collection","formatDoc","doc","id","data","getCurrentTimestamp","FieldValue","serverTimestamp","auth","ColorModeSwitcher","props","toggleColorMode","useColorMode","SwitchIcon","useColorModeValue","FaMoon","FaSun","size","fontSize","base","md","variant","color","marginLeft","onClick","icon","Profile","useAuth","logout","currentUser","history","useHistory","a","push","cursor","as","Avatar","name","email","p","bg","ReLink","to","NavBar","h","mb","alignItems","justifyContent","style","fontFamily","textDecoration","ml","fontWeight","lg","bgGradient","bgClip","w","colorScheme","mr","AuthContext","React","createContext","useContext","AuthProvider","children","useState","setCurrentUser","loading","setloading","provider","GoogleAuthProvider","useEffect","onAuthStateChanged","user","value","signup","password","createUserWithEmailAndPassword","signOut","signGoogle","signInWithPopup","forgotPassword","sendPasswordResetEmail","login","signInWithEmailAndPassword","updateEmail","updatePassword","Provider","Card","py","px","shadow","rounded","LoginForm","emailRef","useRef","passRef","setError","setLoading","handleSubmit","e","preventDefault","current","form","onSubmit","spacing","status","borderRadius","type","autoComplete","required","ref","marginBottom","disabled","Login","cred","set","createdAt","userId","uid","maxW","mx","textAlign","mt","boxShadow","columns","borderWidth","borderColor","SignUpForm","passConRef","users","SignUp","OcrApp","useDisclosure","isOpen","onOpen","onClose","btnRef","file","setFile","ocr","setOcr","lang","setLang","fdata","setFdata","isOpenpop","setIsOpen","selectLng","setSelectLng","toast","useToast","progress","setProgress","fileRef","bgColor","worker","createWorker","logger","m","doOCR","load","loadLanguage","initialize","recognize","text","position","title","isClosable","onSnapshot","Object","values","userocrData","update","arrayUnion","docRef","placement","finalFocusRef","length","map","d","i","border","overflowY","direction","Flex","duration","Circle","top","right","bottom","zIndex","MdCheck","accept","onChange","target","files","Center","maxH","src","URL","createObjectURL","alt","visibility","placeholder","selected","defaultValue","returnFocusOnClose","closeOnBlur","preventOverflow","css","backgroundColor","width","jsPDF","save","downloadIt","MdFileDownload","clipboard","writeText","MdContentCopy","MdHistory","PrivateRoute","Component","component","rest","render","ForgotPassword","errorsuc","setErrorsuc","handleForgotpass","align","sm","UpdateProfile","promises","Promise","all","finally","NotFound","App","theme","extendTheme","components","Button","baseStyle","_focus","path","ForgotPass","exact","ReactDOM","document","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68f5043c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain:  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId:  process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n\r\n})\r\n\r\nconst firestore = app.firestore() \r\nexport const database = {\r\n  \r\n    // files : firebase.collection('Files');\r\n    ocrdata: firestore.collection(\"users\"),\r\n    formatDoc : doc =>{\r\n        return {\r\n            id:doc.id,...doc.data()\r\n        }\r\n    },\r\n    getCurrentTimestamp:firebase.firestore.FieldValue.serverTimestamp\r\n}\r\n\r\nexport const auth = app.auth()\r\nexport default app;","import React from 'react';\r\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\n\r\nexport const ColorModeSwitcher = props => {\r\n  const { toggleColorMode } = useColorMode();\r\n  \r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"lg\"\r\n      fontSize={{base:\"20px\",md:\"25px\"}}\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  useColorModeValue,\r\n  MenuButton,\r\n  MenuList,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const { logout, currentUser } = useAuth();\r\n  const history = useHistory(\"\");\r\n  async function handleLogout() {\r\n    try {\r\n      await logout();\r\n      console.log(\"Loggedd out\");\r\n      history.push(\"/login\");\r\n    } catch {\r\n      return console.log(\"error\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          cursor=\"pointer\"\r\n          as={Avatar}\r\n          size=\"md\"\r\n          name={currentUser.email}\r\n          color={useColorModeValue(\"black\", \"white\")}\r\n          p={5}\r\n          bg={useColorModeValue(\"gray.300\", \"gray.600\")}\r\n        ></MenuButton>\r\n        <MenuList>\r\n          <MenuItem as={ReLink} to=\"/update-profile\">\r\n            Update Profile{\" \"}\r\n          </MenuItem>\r\n          <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { Button, Text, Flex, Spacer, Heading } from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"../../ColorModeSwitcher\";\r\nimport Profile from \"./Profile\";\r\n\r\nexport default function NavBar() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Flex\r\n      h={{ base: \"70px\", md: \"100px\" }}\r\n      mb={{ base: \"20px\", md: \"10px\" }}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Heading\r\n        as={ReLink}\r\n        to=\"/\"\r\n        style={{ fontFamily: \"'Press Start 2P' \", textDecoration: \"none\" }}\r\n        ml=\"20px\"\r\n        fontWeight=\"bold\"\r\n        fontSize={{ base: \"20px\", md: \"45px\", lg: \"50px\" }}\r\n        bgGradient=\"linear(to-r, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n        w={{ base: \"400px\", md: \"500px\", lg: \"500px\" }}\r\n      >\r\n        OCR APP\r\n      </Heading>\r\n      <Spacer />\r\n      {!currentUser && (\r\n        <>\r\n          <Button\r\n            colorScheme=\"light\"\r\n            variant=\"ghost\"\r\n            mr={{ base: \"1px\", md: \"10px\" }}\r\n            fontSize={{ base: \"15px\", md: \"20px\" }}\r\n          >\r\n            <Text\r\n              as={ReLink}\r\n              style={{ textDecoration: \"none\" }}\r\n              as={ReLink}\r\n              to=\"/signup\"\r\n            >\r\n              Sign Up\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"light\"\r\n            variant=\"ghost\"\r\n            mr={{ base: \"1px\", md: \"10px\" }}\r\n            fontSize={{ base: \"15px\", md: \"20px\" }}\r\n          >\r\n            <Text as={ReLink} style={{ textDecoration: \"none\" }} to=\"/login\">\r\n              Login\r\n            </Text>\r\n          </Button>\r\n        </>\r\n      )}\r\n      {currentUser && (\r\n        <>\r\n          <Text mr={{base:\"10px\",md:\"20px\"}} fontSize={{base:\"12px\",md:\"sm\"}} color=\"gray.400\">\r\n            {currentUser.email}\r\n          </Text>\r\n          <Profile />\r\n        </>\r\n      )}\r\n      <ColorModeSwitcher\r\n        ml={{ base: \"1px\", md: \"10px\" }}\r\n        mr={{ base: \"2px\", md: \"10px\" }}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth,database } from \"../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\nimport NavBar from \"../components/Navbar/NavBar.js\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setloading] = useState(true);\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signGoogle() {\r\n    return auth.signInWithPopup(provider);\r\n  }\r\n\r\n  function forgotPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email){\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password){\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n     \r\n\r\n      \r\n\r\n      // }  \r\n      setloading(false)\r\n    })\r\n    return unsubscribe \r\n  }, [ ]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    logout,\r\n    signGoogle,\r\n    forgotPassword,\r\n    login,\r\n    updateEmail,\r\n    updatePassword\r\n    \r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { Box, useColorModeValue } from '@chakra-ui/react'\r\nimport * as React from 'react'\r\n\r\nexport const Card = (props) => (\r\n  <Box\r\n    bg={useColorModeValue('white', 'gray.700')}\r\n    py=\"8\"\r\n    px={{\r\n      base: '4',\r\n      md: '10',\r\n    }}\r\n    shadow=\"base\"\r\n    rounded='lg'\r\n    {...props}\r\n  />\r\n)\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Text,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef,useEffect } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { database } from \"../../firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nexport default function LoginForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const { login, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passRef.current.value);\r\n      history.push(\"/\");\r\n      console.log(\"Logged in\")\r\n    } catch {\r\n      setError(\"Password or Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {currentUser && (\r\n            <Alert borderRadius=\"8\" status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>\r\n          )}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n              <Text\r\n                fontSize=\"md\"\r\n                as={ReLink}\r\n                color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n                to=\"/forgot-password\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                Forgot Password?\r\n              </Text>\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  VisuallyHidden,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport { FaFacebook, FaGithub, FaGoogle } from \"react-icons/fa\";\r\nimport { Card } from \"./Card\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { database } from \"../../firebase\";\r\n\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const { signGoogle, error } = useAuth();\r\n  async function handleGooleLogin(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await signGoogle().then(cred => {\r\n        // database.ocrdata.doc(cred.)\r\n        database.ocrdata.doc(cred.user.email).set(\r\n          {\r\n            email:cred.user.email,\r\n            createdAt: database.getCurrentTimestamp(),\r\n            userId:cred.user.uid\r\n          }\r\n        )\r\n      })     \r\n      console.log(\"singed in\")\r\n      history.push(\"/\");\r\n    } catch {\r\n      console.log(\"theres a error\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n      <Heading textAlign=\"center\" fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\">\r\n        Login in Here\r\n      </Heading>\r\n\r\n      <Box as={ReLink}\r\n        to=\"/signup\">\r\n        <Text\r\n        \r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Box>\r\n        \r\n\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <LoginForm />\r\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n            disabled\r\n          >\r\n            <VisuallyHidden>Login with Facebook</VisuallyHidden>\r\n            <FaFacebook />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            onClick={handleGooleLogin}\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Google</VisuallyHidden>\r\n            <FaGoogle />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            disabled\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Github</VisuallyHidden>\r\n            <FaGithub />\r\n          </Button>\r\n        </SimpleGrid>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Box,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { database } from \"../../firebase\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function SignUpForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { signup, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Password Does Not Match!\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passRef.current.value).then(\r\n        (cred) => {\r\n          // database.ocrdata.doc(cred.)\r\n          database.ocrdata.doc(cred.user.email).set({\r\n            email: cred.user.email,\r\n            createdAt: database.getCurrentTimestamp(),\r\n            userId: cred.user.uid,\r\n          });\r\n        }\r\n      );\r\n      history.push(\"/\");\r\n      users();\r\n      console.log(\"signed up\");\r\n    } catch {\r\n      setError(\"Failed to Create Account!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function users() {\r\n    console.log(currentUser.email);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Stack spacing=\"3\">\r\n            {error && (\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input name=\"email\" type=\"email\" ref={emailRef} required />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"conpassword\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"lg\"\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </FormControl>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Heading, Text, Link, useColorModeValue } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Card } from \"../login/Card\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nconst SignUp = () => (\r\n  <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n    \r\n    <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\" >\r\n      Sign Up Here\r\n    </Heading>\r\n    <Box as={ReLink}\r\n        to=\"/login\">\r\n        <Text\r\n        \r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Already have an account?\r\n        </Text>\r\n      </Box>\r\n    \r\n    <Card boxShadow=\"dark-lg\">\r\n      <SignUpForm />\r\n    </Card>\r\n  </Box>\r\n);\r\n\r\nexport default SignUp;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Input,\r\n  Container,\r\n  Spacer,\r\n  Image,\r\n  Flex,\r\n  Progress,\r\n  RadioGroup,\r\n  Radio,\r\n  Center,\r\n  Circle,\r\n  Icon,\r\n  useToast,\r\n  Heading,\r\n  Stack,\r\n  Skeleton,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  Select,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  MdCheck,\r\n  MdFileDownload,\r\n  MdContentCopy,\r\n  MdHistory,\r\n} from \"react-icons/md\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorModeValue } from \"@chakra-ui/react\";\r\nimport { database } from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction OcrApp() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef();\r\n  const [file, setFile] = useState(null);\r\n  const [ocr, setOcr] = useState(\"\");\r\n  const [lang, setLang] = useState(\"eng\");\r\n  const [fdata, setFdata] = useState([]);\r\n  const [isOpenpop, setIsOpen] = useState(false);\r\n  const [selectLng, setSelectLng] = useState(false);\r\n  const close = () => setIsOpen(false);\r\n  const closelng = () => setSelectLng(false);\r\n\r\n  const toast = useToast();\r\n  const [progress, setProgress] = useState(\"0\");\r\n  const fileRef = useRef();\r\n  const { currentUser } = useAuth();\r\n\r\n  const bgColor = useColorModeValue(\"gray.900\", \"gray.700\");\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => setProgress(m.progress * 100),\r\n  });\r\n\r\n  const doOCR = async () => {\r\n    try {\r\n      await worker.load();\r\n      await worker.loadLanguage(lang);\r\n      await worker.initialize(lang);\r\n      const {\r\n        data: { text },\r\n      } = await worker.recognize(file);\r\n      setOcr(text);\r\n    } catch {\r\n      return toast({\r\n        position:  \"top\",\r\n        title: \"There a error\",\r\n        status: \"error\",\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file === null) {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Please Select A File\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n\r\n        isClosable: true,\r\n      });\r\n    }\r\n    doOCR();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    } else {\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef.onSnapshot((doc) => {\r\n        setFdata(Object.values(doc.data().userocrData));\r\n        console.log(\"Current data: \", Object.values(doc.data().userocrData));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (file !== null) {\r\n      setSelectLng(!selectLng);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    }\r\n    if (ocr !== \"\") {\r\n      console.log(\"done\");\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef\r\n        .update({\r\n          userocrData: firebase.firestore.FieldValue.arrayUnion(ocr),\r\n        })\r\n        .then((docRef) => {\r\n          console.log(docRef);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      setIsOpen(!isOpenpop);\r\n    }\r\n  }, [ocr, currentUser, database]);\r\n\r\n  // const userocrData =  fdata.length ?  (\r\n  //   Object.values(fdata).map((data ,i) => {\r\n  //     return(\r\n\r\n  //     )\r\n  //   })\r\n  // ) : (<Heading> None Data </Heading>)\r\n\r\n  const copyIt = () => {\r\n    navigator.clipboard.writeText(ocr);\r\n    return toast({\r\n      position:\"top\",\r\n      title: \"Copied\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  // function ReadtocrData() {\r\n  //   var updateArrayRef = database.ocrdata.doc(currentUser.email);\r\n  //   updateArrayRef.update({\r\n  //     ocrdata:firebase.firestore.FieldValue.arrayUnion(ocr)\r\n  //   })\r\n  //   .then((docRef) => {\r\n  //     console.log(docRef);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(\"Error adding document: \", error);\r\n  //   });\r\n  // }\r\n\r\n  const handlecopytoClip = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Copy\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return copyIt();\r\n    }\r\n  };\r\n  const downloadIt = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(ocr, 20, 20);\r\n    doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Downloaded\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  const handleDownload = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Download\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return downloadIt();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>\r\n              <Heading>History</Heading>{\" \"}\r\n            </DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <Text color={useColorModeValue(\"gray\")} mb=\"10px\">\r\n                {currentUser && currentUser.email}\r\n              </Text>\r\n\r\n              {fdata &&\r\n                fdata.length > 0 &&\r\n                fdata.map((d, i) => (\r\n                  <Box\r\n                    h=\"120px\"\r\n                    p={2}\r\n                    cursor=\"pointer\"\r\n                    borderRadius=\"10px\"\r\n                    fontSize=\"14px\"\r\n                    boxShadow=\"lg\"\r\n                    border=\"lightgray solid 1px\"\r\n                    overflowY=\"auto\"\r\n                    mb=\"20px\"\r\n                    key={i}\r\n                  >\r\n                    {\" \"}\r\n                    <Text key={i} color=\"useColorModeValue('white','black')\">\r\n                      {d}\r\n                    </Text>\r\n                  </Box>\r\n                ))}\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n      <Container\r\n        maxW={{ base: \"90%\", md: \"85%\" }}\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n        as={Flex}\r\n        h={{ base: \"300px\", md: \"500px\" }}\r\n      >\r\n        <Flex\r\n          direction=\"column\"\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          position=\"relative\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          mr=\"50px\"\r\n          mb=\"10px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n        >\r\n          <Box\r\n            onClick={handleOnClick}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            top={{ md: \"200px\" }}\r\n            right={{ base: \"18px\", md: \"-70px\" }}\r\n            size={{ base: \"45px\", md: \"90px\" }}\r\n            bottom={{ base: \"2.5\" }}\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n            zIndex=\"4\"\r\n          >\r\n            <Icon fontSize={{ base: \"25px\", md: \"40px\" }} as={MdCheck} />\r\n          </Box>\r\n          <Center mt={1}>\r\n            <Box>\r\n              <Input\r\n                fontSize={{ base: \"10px\", md: \"15px\" }}\r\n                ref={fileRef}\r\n                type=\"file\"\r\n                variant=\"ghost\"\r\n                accept=\".bmp,.jpg,.png,.pbm\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Box as={Center} w=\"100%\" h={{ base: \"160px\", md: \"300px\" }}>\r\n            <Image\r\n              p={2}\r\n              maxH={{ base: \"60%\", md: \"80%\" }}\r\n              src={file ? URL.createObjectURL(file) : null}\r\n              alt={file ? file.name : null}\r\n            ></Image>\r\n          </Box>\r\n\r\n          <Spacer />\r\n\r\n          <Progress\r\n            m={2}\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            borderRadius=\"50px\"\r\n            value={progress}\r\n          />\r\n\r\n          <Box\r\n            as={Center}\r\n            boxShadow=\"dark-lg\"\r\n            borderRadius=\"15px\"\r\n            w={{ base: \"70%\", md: \"100%\" }}\r\n            h={{ base: \"50px\", md: \"80px\" }}\r\n            ml={{ base: \"10px\", md: \"0px\" }}\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n          >\r\n            <Box\r\n              visibility={{ base: \"visible\", md: \"hidden\" }}\r\n              color={useColorModeValue(\"white\", \"white\")}\r\n            >\r\n              <Select\r\n                variant=\"unstyled\"\r\n                placeholder=\"Select option\"\r\n                color={useColorModeValue(\"white\", \"white\")}\r\n                w={{ base: \"200px\", md: \"0px\" }}\r\n                onChange={(e) =>setLang(e.target.value)}\r\n              >\r\n                <option\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"hin\"\r\n                  \r\n                \r\n                >\r\n                  Hindi\r\n                </option>\r\n                <option\r\n                selected=\"selected\"\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"eng\"\r\n                  defaultValue\r\n                >\r\n                 English\r\n                </option>\r\n                <option\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"mar\"\r\n           \r\n                >\r\n                 Marathi\r\n                </option>\r\n              </Select>\r\n            </Box>\r\n\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={selectLng}\r\n              onClose={closelng}\r\n              placement=\"auto-start\"\r\n              closeOnBlur={true}\r\n              preventOverflow={true}\r\n              visibility={{ base: \"hidden\", md: \"visible\" }}\r\n            >\r\n              <PopoverTrigger>\r\n                <RadioGroup\r\n                  defaultValue=\"eng\"\r\n                  color={useColorModeValue(\"white\")}\r\n                  w={{ base: \"0\", md: \"100%\" }}\r\n                  visibility={{ base: \"hidden\", md: \"visible\" }}\r\n                >\r\n                  <Flex direction={{ md: \"row\" }}>\r\n                    <Radio\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      w={{base:\"0%\",md:\"33.3333%\"}}\r\n                      value=\"eng\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      English\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      colorScheme=\"green\"\r\n                      justifyContent=\"center\"\r\n                      value=\"hin\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Hindi\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      value=\"mar\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Marathi\r\n                    </Radio>\r\n                  </Flex>\r\n                </RadioGroup>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser && currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>\r\n                  Select the Language that File cantains!\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          w=\"100%\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n          position=\"relative\"\r\n        >\r\n          <Box\r\n            h={{ base: \"250px\" }}\r\n            overflowY=\"auto\"\r\n            css={{\r\n              \"&::-webkit-scrollbar\": {\r\n                backgroundColor: useColorModeValue(\"gray\", \"black\"),\r\n                borderRadius: \"10px\",\r\n                width: \"8px\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                borderRadius: \"10px\",\r\n                backgroundColor: useColorModeValue(\"gray.900\", \"gray\"),\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                borderRadius: \"10px\",\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                backgroundColor: useColorModeValue(\"black\", \"white\"),\r\n              },\r\n            }}\r\n          >\r\n            <Text fontSize={{base:\"13px\",md:\"18px\"}} p={4}>{ocr}</Text>\r\n          </Box>\r\n\r\n          <Box\r\n            onClick={handleDownload}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom={{ base: \"-50px\", md: \"5px\" }}\r\n            right={{ base: \"60px\", md: \"-60px\" }}\r\n            size={{base:\"45px\",md:\"50px\"}}\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"25px\" as={MdFileDownload} />\r\n          </Box>\r\n          <Box\r\n            onClick={handlecopytoClip}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom={{ base: \"-50px\", md: \"80px\" }}\r\n            right={{ base: \"0px\", md: \"-60px\" }}\r\n            size={{base:\"45px\",md:\"50px\"}}\r\n            bg={useColorModeValue(\"gray.900\", \"gray.700\")}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"20px\" as={MdContentCopy} />\r\n          </Box>\r\n\r\n          {currentUser && (\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={isOpenpop}\r\n              onClose={close}\r\n              placement=\"auto-end\"\r\n              closeOnBlur={false}\r\n              preventOverflow={true}\r\n              visibility={{ base: \"hidden\", md: \"visible\" }}\r\n            >\r\n              <PopoverTrigger>\r\n                <Box\r\n                  onClick={onOpen}\r\n                  ref={btnRef}\r\n                  cursor=\"pointer\"\r\n                  boxShadow=\"dark-lg\"\r\n                  as={Circle}\r\n                  position=\"absolute\"\r\n                  bottom={{ base: \"-50px\",md:\"155px\"}}\r\n                  right={{base:\"120px\",md:\"-60px\"}}\r\n                  size={{base:\"45px\",md:\"50px\"}}\r\n                  bg={bgColor}\r\n                  color=\"white\"\r\n                >\r\n                  <Icon fontSize=\"20px\" as={MdHistory} />\r\n                </Box>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>Check your OCR History Here!</PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n        </Flex>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OcrApp;\r\n","  \r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        \r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" /> \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  Box,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useColorModeValue,\r\n  AlertIcon,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { Card } from \"./login/Card\";\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { forgotPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [errorsuc, setErrorsuc] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleForgotpass(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setErrorsuc(\"\");\r\n      setLoading(true);\r\n      await forgotPassword(emailRef.current.value);\r\n      setErrorsuc(\"Check Your Email for Reset Link\");\r\n    } catch {\r\n      setError(\"Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{ base: \"90%\", md: \"450px\" }} mx=\"auto\">\r\n      <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\">\r\n        Forgot Password\r\n      </Heading>\r\n\r\n      <Link as={ReLink} to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n        <Text\r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          align=\"center\"\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n        >\r\n          {\" \"}\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Link>\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <chakra.form onSubmit={handleForgotpass}>\r\n          <Stack spacing=\"4\">\r\n            {error && (\r\n              <Alert\r\n                status=\"error\"\r\n                rounded={{\r\n                  sm: \"lg\",\r\n                }}\r\n              >\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            {errorsuc && (\r\n              <Alert status=\"success\">\r\n                <AlertIcon />\r\n                {errorsuc}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                ref={emailRef}\r\n              />\r\n            </Box>\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"md\"\r\n              onClick={handleForgotpass}\r\n              disabled={loading}\r\n            >\r\n              Reset Password\r\n            </Button>{\" \"}\r\n          </Stack>\r\n        </chakra.form>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Card } from \"../login/Card\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  \r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passRef.current.value) {\r\n      promises.push(updatePassword(passRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n    \r\n    <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n\r\n<Heading textAlign=\"center\" fontSize={{base:\"30px\",md:\"40px\"}} mb={10} fontWeight=\"extrabold\">\r\n        Update Profile\r\n      </Heading>\r\n    <Card>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          { currentUser && (<Alert status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>)}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              placeholder={currentUser.email}\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n          <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </Card>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Heading,Link } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport {Link as ReLink} from \"react-router-dom\"\r\n\r\n\r\nconst NotFound = () =>\r\n\r\n    \r\n\r\n  <div>\r\n    <h3>404 page not found</h3>\r\n    <p>We are sorry but the page you are looking for does not exist.</p>\r\n    <Link as={ReLink} to=\"/\"> \r\n        <Heading>Login or Signup</Heading>\r\n    </Link>\r\n\r\n  </div>\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\r\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\r\nimport Login from \"./components/login/Login\";\r\nimport SignUp from \"./components/Signup/Signup\";\r\nimport OcrApp from \"./components/OcrApp\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/NavBar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport UpdateProfile from \"./components/Navbar/UpdateProfile\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nfunction App() {\r\n  const theme = extendTheme({\r\n    components: {\r\n      Button: {\r\n        baseStyle: {\r\n          _focus: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },    \r\n    },\r\n  });\r\n  return (\r\n    <AuthProvider>\r\n      <ChakraProvider theme={theme}>\r\n        <Router>\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/forgot-password\" component={ForgotPass} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/update-profile\"\r\n              component={UpdateProfile}\r\n            />\r\n            <Route exact path=\"/\" component={OcrApp} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </ChakraProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ColorModeScript,Box } from \"@chakra-ui/react\";\r\nimport React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n \r\n    <ColorModeScript />\r\n    <App /> \r\n\r\n    \r\n  </StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}