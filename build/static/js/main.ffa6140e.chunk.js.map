{"version":3,"sources":["firebase.js","ColorModeSwitcher.js","components/Navbar/Profile.js","components/Navbar/NavBar.js","contexts/AuthContext.js","components/login/Card.js","components/login/LoginForm.js","components/login/Login.js","components/Signup/SignUpForm.js","components/Signup/Signup.js","components/OcrApp.js","components/PrivateRoute.js","components/ForgotPass.js","components/Navbar/UpdateProfile.js","components/NotFound.js","components/Footer.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ocrdata","firestore","collection","formatDoc","doc","id","data","getCurrentTimestamp","FieldValue","serverTimestamp","auth","ColorModeSwitcher","props","toggleColorMode","useColorMode","SwitchIcon","useColorModeValue","FaMoon","FaSun","size","fontSize","base","md","variant","color","marginLeft","onClick","icon","Profile","useAuth","logout","currentUser","history","useHistory","a","console","log","push","cursor","as","Avatar","name","email","p","bg","ReLink","to","NavBar","h","mb","alignItems","justifyContent","style","fontFamily","textDecoration","ml","fontWeight","lg","bgGradient","bgClip","w","colorScheme","mr","AuthContext","React","createContext","useContext","AuthProvider","children","useState","setCurrentUser","loading","setloading","provider","GoogleAuthProvider","useEffect","onAuthStateChanged","user","value","signup","password","createUserWithEmailAndPassword","signOut","signGoogle","signInWithPopup","forgotPassword","sendPasswordResetEmail","login","signInWithEmailAndPassword","updateEmail","updatePassword","Provider","Card","py","px","shadow","rounded","LoginForm","emailRef","useRef","passRef","error","setError","setLoading","handleSubmit","e","preventDefault","current","form","onSubmit","spacing","status","borderRadius","type","autoComplete","required","ref","marginBottom","disabled","Login","then","cred","set","createdAt","userId","uid","merge","maxW","mx","textAlign","mt","boxShadow","columns","borderWidth","borderColor","SignUpForm","passConRef","users","SignUp","OcrApp","useDisclosure","isOpen","onOpen","onClose","btnRef","file","setFile","ocr","setOcr","lang","setLang","fdata","setFdata","isOpenpop","setIsOpen","selectLng","setSelectLng","some","some2","some3","toast","useToast","progress","setProgress","fileRef","bgColor2","bgColor","worker","createWorker","logger","m","doOCR","load","loadLanguage","initialize","recognize","text","position","title","isClosable","onSnapshot","userocrData","Object","values","update","arrayUnion","docRef","catch","placement","finalFocusRef","css","backgroundColor","width","flexDirection","length","map","d","i","border","overflowY","sdata","arrayRemove","handleSingleHistory","Circle","right","bottom","MdDelete","jsPDF","save","duration","handlePdownload","MdFileDownload","MdEdit","Center","direction","Flex","top","zIndex","MdCheck","accept","onChange","target","files","maxH","src","URL","createObjectURL","alt","visibility","placeholder","selected","defaultValue","returnFocusOnClose","closeOnBlur","preventOverflow","downloadIt","navigator","clipboard","writeText","MdContentCopy","MdHistory","href","isExternal","PrivateRoute","Component","component","rest","render","ForgotPassword","errorsuc","setErrorsuc","handleForgotpass","align","sm","UpdateProfile","promises","Promise","all","finally","NotFound","Footer","App","theme","extendTheme","components","Button","baseStyle","_focus","path","ForgotPass","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ffa6140e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain:  process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId:  process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId:  process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n\r\n})\r\n\r\nconst firestore = app.firestore() \r\nexport const database = {\r\n  \r\n    // files : firebase.collection('Files');\r\n    ocrdata: firestore.collection(\"users\"),\r\n    formatDoc : doc =>{\r\n        return {\r\n            id:doc.id,...doc.data()\r\n        }\r\n    },\r\n    getCurrentTimestamp:firebase.firestore.FieldValue.serverTimestamp\r\n}\r\n\r\nexport const auth = app.auth()\r\nexport default app;","import React from 'react';\r\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\n\r\nexport const ColorModeSwitcher = props => {\r\n  const { toggleColorMode } = useColorMode();\r\n  \r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"lg\"\r\n      fontSize={{base:\"20px\",md:\"25px\"}}\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n\r\n  );\r\n};\r\n","import {\r\n  Avatar,\r\n  useColorModeValue,\r\n  MenuButton,\r\n  MenuList,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const { logout, currentUser } = useAuth();\r\n  const history = useHistory(\"\");\r\n  async function handleLogout() {\r\n    try {\r\n      await logout();\r\n      console.log(\"Loggedd out\");\r\n      history.push(\"/login\");\r\n    } catch {\r\n      return console.log(\"error\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          cursor=\"pointer\"\r\n          as={Avatar}\r\n          size=\"md\"\r\n          name={currentUser.email}\r\n          color={useColorModeValue(\"black\", \"white\")}\r\n          p={5}\r\n          bg={useColorModeValue(\"gray.300\", \"gray.600\")}\r\n        ></MenuButton>\r\n        <MenuList>\r\n          <MenuItem as={ReLink} to=\"/update-profile\">\r\n            Update Profile{\" \"}\r\n          </MenuItem>\r\n          <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { Button, Text, Flex, Spacer, Heading } from \"@chakra-ui/react\";\r\nimport { ColorModeSwitcher } from \"../../ColorModeSwitcher\";\r\nimport Profile from \"./Profile\";\r\n\r\nexport default function NavBar() {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Flex\r\n      h={{ base: \"70px\", md: \"100px\" }}\r\n      mb={{ base: \"20px\", md: \"10px\" }}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Heading\r\n        as={ReLink}\r\n        to=\"/\"\r\n        style={{ fontFamily: \"'Press Start 2P' \", textDecoration: \"none\" }}\r\n        ml=\"20px\"\r\n        fontWeight=\"extrabold\"\r\n        fontSize={{ base: \"20px\", md: \"45px\", lg: \"50px\" }}\r\n        bgGradient=\"linear(to-r, #7928CA,#FF0080)\"\r\n        bgClip=\"text\"\r\n        w={{ base: \"400px\", md: \"500px\", lg: \"500px\" }}\r\n      >\r\n        OCR APP\r\n      </Heading>\r\n      <Spacer />\r\n      {!currentUser && (\r\n        <>\r\n          <Button\r\n            colorScheme=\"light\"\r\n            variant=\"ghost\"\r\n            mr={{ base: \"1px\", md: \"10px\" }}\r\n            fontSize={{ base: \"15px\", md: \"20px\" }}\r\n          >\r\n            <Text\r\n              as={ReLink}\r\n              style={{ textDecoration: \"none\" }}\r\n              as={ReLink}\r\n              to=\"/signup\"\r\n            >\r\n              Sign Up\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"light\"\r\n            variant=\"ghost\"\r\n            mr={{ base: \"1px\", md: \"10px\" }}\r\n            fontSize={{ base: \"15px\", md: \"20px\" }}\r\n          >\r\n            <Text as={ReLink} style={{ textDecoration: \"none\" }} to=\"/login\">\r\n              Login\r\n            </Text>\r\n          </Button>\r\n        </>\r\n      )}\r\n      {currentUser && (\r\n        <>\r\n          <Text mr={{base:\"10px\",md:\"20px\"}} fontSize={{base:\"12px\",md:\"sm\"}} color=\"gray.400\">\r\n            {currentUser.email}\r\n          </Text>\r\n          <Profile />\r\n        </>\r\n      )}\r\n      <ColorModeSwitcher\r\n        ml={{ base: \"1px\", md: \"10px\" }}\r\n        mr={{ base: \"2px\", md: \"10px\" }}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth,database } from \"../firebase.js\";\r\nimport firebase from \"firebase/app\";\r\nimport NavBar from \"../components/Navbar/NavBar.js\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setloading] = useState(true);\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function signGoogle() {\r\n    return auth.signInWithPopup(provider);\r\n  }\r\n\r\n  function forgotPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email){\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password){\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n     \r\n\r\n      \r\n\r\n      // }  \r\n      setloading(false)\r\n    })\r\n    return unsubscribe \r\n  }, [ ]);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    logout,\r\n    signGoogle,\r\n    forgotPassword,\r\n    login,\r\n    updateEmail,\r\n    updatePassword\r\n    \r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { Box, useColorModeValue } from '@chakra-ui/react'\r\nimport * as React from 'react'\r\n\r\nexport const Card = (props) => (\r\n  <Box\r\n    bg={useColorModeValue('white', 'gray.700')}\r\n    py=\"8\"\r\n    px={{\r\n      base: '4',\r\n      md: '10',\r\n    }}\r\n    shadow=\"base\"\r\n    rounded='lg'\r\n    {...props}\r\n  />\r\n)\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Text,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef,useEffect } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { database } from \"../../firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nexport default function LoginForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const { login, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passRef.current.value);\r\n      history.push(\"/\");\r\n      console.log(\"Logged in\")\r\n    } catch {\r\n      setError(\"Password or Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          {currentUser && (\r\n            <Alert borderRadius=\"8\" status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>\r\n          )}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n              <Text\r\n                fontSize=\"md\"\r\n                as={ReLink}\r\n                color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n                to=\"/forgot-password\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                Forgot Password?\r\n              </Text>\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n  VisuallyHidden,\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport { FaFacebook, FaGithub, FaGoogle } from \"react-icons/fa\";\r\nimport { Card } from \"./Card\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { database } from \"../../firebase\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const { signGoogle, error } = useAuth();\r\n  async function handleGooleLogin(e) {\r\n    e.preventDefault();\r\n    try {\r\n      await signGoogle().then((cred) => {\r\n        // database.ocrdata.doc(cred.)\r\n        database.ocrdata.doc(cred.user.email).set({\r\n          email: cred.user.email,\r\n          createdAt: database.getCurrentTimestamp(),\r\n          userId: cred.user.uid,\r\n        },{merge:true});\r\n      });\r\n      console.log(\"singed in\");\r\n      history.push(\"/\");\r\n    } catch {\r\n      console.log(\"theres a error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{ base: \"90%\", md: \"450px\" }} mx=\"auto\">\r\n      <Heading\r\n        textAlign=\"center\"\r\n        fontSize={{ base: \"30px\", md: \"40px\" }}\r\n        fontWeight=\"extrabold\"\r\n      >\r\n        Login in Here\r\n      </Heading>\r\n\r\n      <Box as={ReLink} to=\"/signup\">\r\n        <Text\r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{ base: \"sm\", md: \"18px\" }}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Box>\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <LoginForm />\r\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n            disabled\r\n          >\r\n            <VisuallyHidden>Login with Facebook</VisuallyHidden>\r\n            <FaFacebook />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            onClick={handleGooleLogin}\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Google</VisuallyHidden>\r\n            <FaGoogle />\r\n          </Button>\r\n          <Button\r\n            color=\"currentColor\"\r\n            variant=\"outline\"\r\n            disabled\r\n            borderWidth=\"2px\"\r\n            borderColor={useColorModeValue(\"black\", \"white\")}\r\n          >\r\n            <VisuallyHidden>Login with Github</VisuallyHidden>\r\n            <FaGithub />\r\n          </Button>\r\n        </SimpleGrid>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Box,\r\n  Alert,\r\n  AlertIcon,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { database } from \"../../firebase\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function SignUpForm() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { signup, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Password Does Not Match!\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passRef.current.value).then(\r\n        (cred) => {\r\n          // database.ocrdata.doc(cred.)\r\n          database.ocrdata.doc(cred.user.email).set({\r\n            email: cred.user.email,\r\n            createdAt: database.getCurrentTimestamp(),\r\n            userId: cred.user.uid,\r\n          });\r\n        }\r\n      );\r\n      history.push(\"/\");\r\n      users();\r\n      console.log(\"signed up\");\r\n    } catch {\r\n      setError(\"Failed to Create Account!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function users() {\r\n    console.log(currentUser.email);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <FormControl>\r\n          <Stack spacing=\"3\">\r\n            {error && (\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input name=\"email\" type=\"email\" ref={emailRef} required />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"conpassword\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"lg\"\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Stack>\r\n        </FormControl>\r\n      </chakra.form>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Heading, Text, Link, useColorModeValue } from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { Card } from \"../login/Card\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\n\r\nconst SignUp = () => (\r\n  <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n    \r\n    <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\" >\r\n      Sign Up Here\r\n    </Heading>\r\n    <Box as={ReLink}\r\n        to=\"/login\">\r\n        <Text\r\n        \r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          textAlign=\"center\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          Already have an account?\r\n        </Text>\r\n      </Box>\r\n    \r\n    <Card boxShadow=\"dark-lg\">\r\n      <SignUpForm />\r\n    </Card>\r\n  </Box>\r\n);\r\n\r\nexport default SignUp;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Input,\r\n  Container,\r\n  Spacer,\r\n  Image,\r\n  Flex,\r\n  Progress,\r\n  RadioGroup,\r\n  Radio,\r\n  Center,\r\n  Circle,\r\n  Icon,\r\n  useToast,\r\n  Heading,\r\n  Stack,\r\n  Skeleton,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  Select,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Popover,\r\n  Button,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  Link,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  MdCheck,\r\n  MdFileDownload,\r\n  MdContentCopy,\r\n  MdHistory,\r\n  MdDelete,\r\n  MdEdit,\r\n} from \"react-icons/md\";\r\nimport { createWorker } from \"tesseract.js\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorModeValue } from \"@chakra-ui/react\";\r\nimport { database } from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nfunction OcrApp() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef();\r\n  const [file, setFile] = useState(null);\r\n  const [ocr, setOcr] = useState(\"\");\r\n  const [lang, setLang] = useState(\"eng\");\r\n  const [fdata, setFdata] = useState([]);\r\n  const [isOpenpop, setIsOpen] = useState(false);\r\n  const [selectLng, setSelectLng] = useState(false);\r\n  const close = () => setIsOpen(false);\r\n  const closelng = () => setSelectLng(false);\r\n\r\n  const some = useColorModeValue(\"gray\", \"black\");\r\n  const some2 = useColorModeValue(\"gray.900\", \"gray\");\r\n  const some3 = useColorModeValue(\"black\", \"white\");\r\n\r\n  const toast = useToast();\r\n  const [progress, setProgress] = useState(\"0\");\r\n  const fileRef = useRef();\r\n  const { currentUser } = useAuth();\r\n\r\n  const bgColor2 = useColorModeValue(\"gray.900\", \"blue.600\");\r\n  const bgColor = useColorModeValue(\"gray.900\", \"gray.700\");\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => setProgress(m.progress * 100),\r\n  });\r\n\r\n  const doOCR = async () => {\r\n    try {\r\n      await worker.load();\r\n      await worker.loadLanguage(lang);\r\n      await worker.initialize(lang);\r\n      const {\r\n        /*  */ data: { text },\r\n      } = await worker.recognize(file);\r\n      setOcr(text);\r\n    } catch {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"There a error\",\r\n        status: \"error\",\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file === null) {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Please Select A File\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n\r\n        isClosable: true,\r\n      });\r\n    }\r\n    doOCR();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    } else {\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef.onSnapshot((doc) => {\r\n        if (doc.data().userocrData == null) {\r\n          return;\r\n        } else {\r\n          setFdata(Object.values(doc.data().userocrData));\r\n        }\r\n        // console.log(fdata)\r\n        // console.log(\"Current data: \", Object.values(doc.data().userocrData));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (file !== null) {\r\n      setSelectLng(!selectLng);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser == null) {\r\n      return;\r\n    }\r\n    if (ocr !== \"\") {\r\n      console.log(\"done\");\r\n      const updateRef = database.ocrdata.doc(currentUser.email);\r\n      updateRef\r\n        .update({\r\n          userocrData: firebase.firestore.FieldValue.arrayUnion(ocr),\r\n        })\r\n        .then((docRef) => {\r\n          console.log(docRef);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      setIsOpen(!isOpenpop);\r\n    }\r\n  }, [ocr, currentUser, database]);\r\n\r\n  const copyIt = () => {\r\n    navigator.clipboard.writeText(ocr);\r\n    return toast({\r\n      position: \"top\",\r\n      title: \"Copied\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const handlecopytoClip = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Copy\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return copyIt();\r\n    }\r\n  };\r\n  const downloadIt = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(ocr, 20, 20);\r\n    doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Downloaded\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  const handleDownload = () => {\r\n    if (ocr === \"\") {\r\n      return toast({\r\n        position: \"top\",\r\n        title: \"Nothing to Download\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      return downloadIt();\r\n    }\r\n  };\r\n  const handlePdownload = (d) => {\r\n    //Prevoius history downlaod button\r\n\r\n    const doc = new jsPDF();\r\n    doc.text(d, 20, 20);\r\n    doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n    toast({\r\n      position: \"top\",\r\n      title: \"Downloaded\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  const handleSingleHistory = (i, d) => {\r\n    const sdata = d;\r\n    console.log(sdata);\r\n    const updateRef = database.ocrdata.doc(currentUser.email);\r\n    updateRef\r\n      .update({\r\n        userocrData: firebase.firestore.FieldValue.arrayRemove(sdata),\r\n      })\r\n      .then((docRef) => {\r\n        console.log(docRef);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader>\r\n              <Heading>History</Heading>\r\n            </DrawerHeader>\r\n            <DrawerBody\r\n              css={{\r\n                \"&::-webkit-scrollbar\": {\r\n                  backgroundColor: some,\r\n                  borderRadius: \"10px\",\r\n                  width: \"8px\",\r\n                },\r\n                \"&::-webkit-scrollbar-track\": {\r\n                  shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                  borderRadius: \"10px\",\r\n                  backgroundColor: some2,\r\n                },\r\n                \"&::-webkit-scrollbar-thumb\": {\r\n                  borderRadius: \"10px\",\r\n                  shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                  backgroundColor: some3,\r\n                },\r\n              }}\r\n            >\r\n              <Text fontSize=\"15px\" color={useColorModeValue(\"gray\")} mb=\"10px\">\r\n                {currentUser && currentUser.email}\r\n              </Text>\r\n              {/* flexDirection=\"column-reverse\" */}\r\n\r\n              <Flex flexDirection=\"column-reverse\">\r\n                {fdata && fdata.length ? (\r\n                  fdata.map((d, i) => (\r\n                    <Box key={i} position=\"relative\" mb=\"20px\">\r\n                      <Box\r\n                        position=\"relative\"\r\n                        h=\"120px\"\r\n                        p={2}\r\n                        // cursor=\"pointer\"\r\n                        borderRadius=\"10px\"\r\n                        fontSize=\"14px\"\r\n                        boxShadow=\"lg\"\r\n                        border=\"lightgray solid 1px\"\r\n                        overflowY=\"auto\"\r\n                        key={i}\r\n                        css={{\r\n                          \"&::-webkit-scrollbar\": {\r\n                            backgroundColor: some,\r\n                            borderRadius: \"10px\",\r\n                            width: \"6px\",\r\n                          },\r\n                          \"&::-webkit-scrollbar-track\": {\r\n                            shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                            borderRadius: \"10px\",\r\n                            backgroundColor: some2,\r\n                          },\r\n                          \"&::-webkit-scrollbar-thumb\": {\r\n                            borderRadius: \"10px\",\r\n                            shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                            backgroundColor: some3,\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Text key={i}>{d}</Text>\r\n                      </Box>\r\n                     \r\n                        <Box\r\n                          onClick={() => handleSingleHistory(i, d)}\r\n                          cursor=\"pointer\"\r\n                          boxShadow=\"dark-lg\"\r\n                          as={Circle}\r\n                          position=\"absolute\"\r\n                          right=\"15px\"\r\n                          css={{\r\n                            \"box-shadow\": \"0px 0px 12px 1px rgba(0, 0, 0,0.5)\",\r\n                          }}\r\n                          bg={bgColor2}\r\n                          bottom=\"10px\"\r\n                          color=\"white\"\r\n                          size=\"30px\"\r\n                        >\r\n                          <Icon as={MdDelete} />\r\n                        </Box>\r\n                        <Box\r\n                          onClick={() => handlePdownload(d)}\r\n                          cursor=\"pointer\"\r\n                          css={{\r\n                            \"box-shadow\": \"0px 0px 12px 1px rgba(0, 0, 0,0.5)\",\r\n                          }}\r\n                          as={Circle}\r\n                          position=\"absolute\"\r\n                          right=\"55px\"\r\n                          bg={bgColor2}\r\n                          bottom=\"10px\"\r\n                          color=\"white\"\r\n                          size=\"30px\"\r\n                        >\r\n                          <Icon as={MdFileDownload} />\r\n                        </Box>\r\n                        <Box\r\n                          // onClick={() => handlePdownload(d)}\r\n                          cursor=\"pointer\"\r\n                          css={{\r\n                            \"box-shadow\": \"0px 0px 12px 1px rgba(0, 0, 0,0.5)\",\r\n                          }}\r\n                          boxShadow=\"dark-lg\"\r\n                          as={Circle}\r\n                          position=\"absolute\"\r\n                          right=\"95px\"\r\n                          bg={bgColor2}\r\n                          bottom=\"10px\"\r\n                          color=\"white\"\r\n                          size=\"30px\"\r\n                        >\r\n                          <Icon as={MdEdit} />\r\n                        </Box>\r\n                      </Box>\r\n                  \r\n                  ))\r\n                ) : (\r\n                  <Text mt=\"200px\" as={Center} color=\"gray\">\r\n                    No Previous history\r\n                  </Text>\r\n                )}\r\n              </Flex>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n      <Container\r\n        maxW={{ base: \"90%\", md: \"85%\" }}\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n        as={Flex}\r\n        h={{ base: \"300px\", md: \"500px\" }}\r\n      >\r\n        <Flex\r\n          direction=\"column\"\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          position=\"relative\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          w=\"100%\"\r\n          mr=\"50px\"\r\n          mb=\"10px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n        >\r\n          <Box\r\n            onClick={handleOnClick}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            top={{ md: \"200px\" }}\r\n            right={{ base: \"18px\", md: \"-70px\" }}\r\n            size={{ base: \"45px\", md: \"90px\" }}\r\n            bottom={{ base: \"2.5\" }}\r\n            bg={bgColor}\r\n            color=\"white\"\r\n            zIndex=\"4\"\r\n          >\r\n            <Icon fontSize={{ base: \"25px\", md: \"40px\" }} as={MdCheck} />\r\n          </Box>\r\n          <Center mt={1}>\r\n            <Box>\r\n              <Input\r\n                fontSize={{ base: \"10px\", md: \"15px\" }}\r\n                ref={fileRef}\r\n                type=\"file\"\r\n                variant=\"ghost\"\r\n                accept=\".bmp,.jpg,.png,.pbm\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n            </Box>\r\n          </Center>\r\n          <Box as={Center} w=\"100%\" h={{ base: \"160px\", md: \"300px\" }}>\r\n            <Image\r\n              p={2}\r\n              maxH={{ base: \"60%\", md: \"80%\" }}\r\n              src={file ? URL.createObjectURL(file) : null}\r\n              alt={file ? file.name : null}\r\n            ></Image>\r\n          </Box>\r\n\r\n          <Spacer />\r\n\r\n          <Progress\r\n            m={2}\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            borderRadius=\"50px\"\r\n            value={progress}\r\n          />\r\n\r\n          <Box\r\n            as={Center}\r\n            boxShadow=\"dark-lg\"\r\n            borderRadius=\"15px\"\r\n            w={{ base: \"70%\", md: \"100%\" }}\r\n            h={{ base: \"50px\", md: \"80px\" }}\r\n            ml={{ base: \"10px\", md: \"0px\" }}\r\n            bg={bgColor}\r\n          >\r\n            <Box\r\n              visibility={{ base: \"visible\", md: \"hidden\" }}\r\n              color={useColorModeValue(\"white\", \"white\")}\r\n            >\r\n              <Select\r\n                variant=\"unstyled\"\r\n                placeholder=\"Select option\"\r\n                color={useColorModeValue(\"white\", \"white\")}\r\n                w={{ base: \"200px\", md: \"0px\" }}\r\n                onChange={(e) => setLang(e.target.value)}\r\n              >\r\n                <option\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"hin\"\r\n                >\r\n                  Hindi\r\n                </option>\r\n                <option\r\n                  selected=\"selected\"\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"eng\"\r\n                  defaultValue\r\n                >\r\n                  English\r\n                </option>\r\n                <option\r\n                  visibility={{ base: \"visible\", md: \"hidden\" }}\r\n                  value=\"mar\"\r\n                >\r\n                  Marathi\r\n                </option>\r\n              </Select>\r\n            </Box>\r\n\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={selectLng}\r\n              onClose={closelng}\r\n              placement=\"auto-start\"\r\n              closeOnBlur={true}\r\n              preventOverflow={true}\r\n              visibility={{ base: \"hidden\", md: \"visible\" }}\r\n            >\r\n              <PopoverTrigger>\r\n                <RadioGroup\r\n                  defaultValue=\"eng\"\r\n                  color={useColorModeValue(\"white\")}\r\n                  w={{ base: \"0\", md: \"100%\" }}\r\n                  visibility={{ base: \"hidden\", md: \"visible\" }}\r\n                >\r\n                  <Flex direction={{ md: \"row\" }}>\r\n                    <Radio\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      w={{ base: \"0%\", md: \"33.3333%\" }}\r\n                      value=\"eng\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      English\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      colorScheme=\"green\"\r\n                      justifyContent=\"center\"\r\n                      value=\"hin\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Hindi\r\n                    </Radio>\r\n                    <Radio\r\n                      w=\"33.3333%\"\r\n                      justifyContent=\"center\"\r\n                      colorScheme=\"green\"\r\n                      value=\"mar\"\r\n                      onChange={(e) => setLang(e.target.value)}\r\n                    >\r\n                      Marathi\r\n                    </Radio>\r\n                  </Flex>\r\n                </RadioGroup>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser && currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>\r\n                  Select the Language that File cantains!\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex\r\n          py=\"2\"\r\n          px={{\r\n            md: \"2\",\r\n          }}\r\n          w=\"100%\"\r\n          boxShadow=\"dark-lg\"\r\n          borderRadius=\"20px\"\r\n          bg={useColorModeValue(\"white\", \"black\")}\r\n          position=\"relative\"\r\n        >\r\n          <Box\r\n            h={{ base: \"250px\", md: \"480px\" }}\r\n            overflowY=\"auto\"\r\n            css={{\r\n              \"&::-webkit-scrollbar\": {\r\n                backgroundColor: useColorModeValue(\"gray\", \"black\"),\r\n                borderRadius: \"10px\",\r\n                width: \"8px\",\r\n              },\r\n              \"&::-webkit-scrollbar-track\": {\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                borderRadius: \"10px\",\r\n                backgroundColor: useColorModeValue(\"gray.900\", \"gray\"),\r\n              },\r\n              \"&::-webkit-scrollbar-thumb\": {\r\n                borderRadius: \"10px\",\r\n                shadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\r\n                backgroundColor: useColorModeValue(\"black\", \"white\"),\r\n              },\r\n            }}\r\n          >\r\n            <Text fontSize={{ base: \"13px\", md: \"18px\" }} p={4}>\r\n              {ocr}\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box\r\n            onClick={handleDownload}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom={{ base: \"-50px\", md: \"5px\" }}\r\n            right={{ base: \"60px\", md: \"-60px\" }}\r\n            size={{ base: \"45px\", md: \"50px\" }}\r\n            bg={bgColor}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"25px\" as={MdFileDownload} />\r\n          </Box>\r\n          <Box\r\n            onClick={handlecopytoClip}\r\n            cursor=\"pointer\"\r\n            boxShadow=\"dark-lg\"\r\n            as={Circle}\r\n            position=\"absolute\"\r\n            bottom={{ base: \"-50px\", md: \"80px\" }}\r\n            right={{ base: \"0px\", md: \"-60px\" }}\r\n            size={{ base: \"45px\", md: \"50px\" }}\r\n            bg={bgColor}\r\n            color=\"white\"\r\n          >\r\n            <Icon fontSize=\"20px\" as={MdContentCopy} />\r\n          </Box>\r\n\r\n          {currentUser && (\r\n            <Popover\r\n              returnFocusOnClose={false}\r\n              isOpen={isOpenpop}\r\n              onClose={close}\r\n              placement=\"auto-end\"\r\n              closeOnBlur={false}\r\n              preventOverflow={true}\r\n              visibility={{ base: \"hidden\", md: \"visible\" }}\r\n            >\r\n              <PopoverTrigger>\r\n                <Box\r\n                  onClick={onOpen}\r\n                  ref={btnRef}\r\n                  cursor=\"pointer\"\r\n                  boxShadow=\"dark-lg\"\r\n                  as={Circle}\r\n                  position=\"absolute\"\r\n                  bottom={{ base: \"-50px\", md: \"155px\" }}\r\n                  right={{ base: \"120px\", md: \"-60px\" }}\r\n                  size={{ base: \"45px\", md: \"50px\" }}\r\n                  bg={bgColor}\r\n                  color=\"white\"\r\n                >\r\n                  <Icon fontSize=\"20px\" as={MdHistory} />\r\n                </Box>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Hey {currentUser.email}\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>Check your OCR History Here!</PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          )}\r\n        </Flex>\r\n      </Container>\r\n      <Box\r\n        mt={{ base: \"335px\", md: \"40px\" }}\r\n        as={Center}\r\n        fontFamily=\"mono\"\r\n        fontSize={{ base: \"12px\", md: \"15px\" }}\r\n      >\r\n        Made with{\" \"}\r\n        <Box fontSize={{ md: \"20px\", base: \"15px\" }}> &nbsp;❤️&nbsp; </Box>\r\n        by&nbsp;\r\n        <Link\r\n          color=\"blue.500\"\r\n          href=\"https://github.com/kkeval\"\r\n          fontWeight=\"bold\"\r\n          isExternal\r\n        >\r\n          Keval Panchal\r\n        </Link>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OcrApp;\r\n","  \r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        \r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" /> \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  Box,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useColorModeValue,\r\n  AlertIcon,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Link as ReLink } from \"react-router-dom\";\r\nimport { Card } from \"./login/Card\";\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { forgotPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [errorsuc, setErrorsuc] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleForgotpass(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setErrorsuc(\"\");\r\n      setLoading(true);\r\n      await forgotPassword(emailRef.current.value);\r\n      setErrorsuc(\"Check Your Email for Reset Link\");\r\n    } catch {\r\n      setError(\"Email is Wrong!\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Box maxW={{ base: \"90%\", md: \"450px\" }} mx=\"auto\">\r\n      <Heading textAlign=\"center\"  fontSize={{base:\"30px\",md:\"40px\"}} fontWeight=\"extrabold\">\r\n        Forgot Password\r\n      </Heading>\r\n\r\n      <Link as={ReLink} to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n        <Text\r\n          mt=\"2\"\r\n          mb=\"5\"\r\n          fontSize={{base:\"sm\",md:\"18px\"}}\r\n          align=\"center\"\r\n          maxW=\"100%\"\r\n          fontWeight=\"medium\"\r\n          color={useColorModeValue(\"blue.500\", \"blue.200\")}\r\n        >\r\n          {\" \"}\r\n          Don&apos;t have an account?{\" \"}\r\n        </Text>\r\n      </Link>\r\n\r\n      <Card boxShadow=\"dark-lg\">\r\n        <chakra.form onSubmit={handleForgotpass}>\r\n          <Stack spacing=\"4\">\r\n            {error && (\r\n              <Alert\r\n                status=\"error\"\r\n                rounded={{\r\n                  sm: \"lg\",\r\n                }}\r\n              >\r\n                <AlertIcon />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            {errorsuc && (\r\n              <Alert status=\"success\">\r\n                <AlertIcon />\r\n                {errorsuc}\r\n              </Alert>\r\n            )}\r\n            <Box>\r\n              <FormLabel>Email address</FormLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                ref={emailRef}\r\n              />\r\n            </Box>\r\n            <Button\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              size=\"lg\"\r\n              fontSize=\"md\"\r\n              onClick={handleForgotpass}\r\n              disabled={loading}\r\n            >\r\n              Reset Password\r\n            </Button>{\" \"}\r\n          </Stack>\r\n        </chakra.form>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  chakra,\r\n  FormLabel,\r\n  Input,\r\n  Alert,\r\n  AlertIcon,\r\n  Stack,\r\n  Box,\r\n  Flex,\r\n  Spacer,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as React from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Card } from \"../login/Card\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n  const passConRef = useRef();\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  \r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passRef.current.value !== passConRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passRef.current.value) {\r\n      promises.push(updatePassword(passRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n    \r\n    <Box  maxW={{base:\"90%\",md:\"450px\"}} mx=\"auto\">\r\n\r\n<Heading textAlign=\"center\" fontSize={{base:\"30px\",md:\"40px\"}} mb={10} fontWeight=\"extrabold\">\r\n        Update Profile\r\n      </Heading>\r\n    <Card>\r\n      <chakra.form onSubmit={handleSubmit}>\r\n        <Stack spacing=\"3\">\r\n          {error && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          { currentUser && (<Alert status=\"success\">\r\n              <AlertIcon />\r\n              {currentUser.email}\r\n            </Alert>)}\r\n          <Box>\r\n            <FormLabel>Email address</FormLabel>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              placeholder={currentUser.email}\r\n              ref={emailRef}\r\n            />\r\n          </Box>\r\n\r\n          <Box>\r\n            <Flex>\r\n              <Box>\r\n                <FormLabel> Password </FormLabel>\r\n              </Box>\r\n              <Spacer />\r\n            </Flex>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              ref={passRef}\r\n              autoComplete=\"password\"\r\n              required\r\n              style={{ marginBottom: \"10px\" }}\r\n            />\r\n          </Box>\r\n          <Box>\r\n              <FormLabel>Re-enter Password</FormLabel>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={passConRef}\r\n                autoComplete=\"password\"\r\n                required\r\n              />\r\n            </Box>\r\n\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            size=\"lg\"\r\n            fontSize=\"md\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Stack>\r\n      </chakra.form>\r\n    </Card>\r\n    </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Heading,Link } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport {Link as ReLink} from \"react-router-dom\"\r\n\r\n\r\nconst NotFound = () =>\r\n\r\n    \r\n\r\n  <div>\r\n    <h3>404 page not found</h3>\r\n    <p>We are sorry but the page you are looking for does not exist.</p>\r\n    <Link as={ReLink} to=\"/\"> \r\n        <Heading>Login or Signup</Heading>\r\n    </Link>\r\n\r\n  </div>\r\n\r\nexport default NotFound;","import { Box, Center,Text } from \"@chakra-ui/react\";\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n   <>\r\n   </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\r\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\r\nimport Login from \"./components/login/Login\";\r\nimport SignUp from \"./components/Signup/Signup\";\r\nimport OcrApp from \"./components/OcrApp\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/NavBar\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport ForgotPass from \"./components/ForgotPass\";\r\nimport UpdateProfile from \"./components/Navbar/UpdateProfile\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  const theme = extendTheme({\r\n    components: {\r\n      Button: {\r\n        baseStyle: {\r\n          _focus: {\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },    \r\n    },\r\n  });\r\n  return (\r\n    <AuthProvider>\r\n      <ChakraProvider theme={theme}>\r\n        <Router>\r\n          <Navbar />\r\n\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/forgot-password\" component={ForgotPass} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/update-profile\"\r\n              component={UpdateProfile}\r\n            />\r\n            <Route exact path=\"/\" component={OcrApp} />\r\n           \r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n        <Footer/>\r\n      </ChakraProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ColorModeScript } from \"@chakra-ui/react\";\r\nimport React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ColorModeScript />\r\n    <App />     \r\n  </StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// serviceWorker.unregister();"],"sourceRoot":""}