{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keval\\\\tesseract.js-react-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { createWorker, recognize, setLogging } from \"tesseract.js\";\nimport \"./App.css\";\nimport { jsPDF } from \"jspdf\";\nimport myFont from \"/arial-unicode-ms.tff\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [ocr, setOcr] = useState(\"No File Selected\");\n  const [lang, setLang] = useState(\"eng\");\n  const worker = createWorker({\n    logger: m => console.log(m)\n  });\n\n  const doOCR = async () => {\n    await worker.load();\n    await worker.loadLanguage(lang);\n    await worker.initialize(lang);\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(file);\n    setOcr(text);\n    worker.getPDF(\"Result\", true);\n  };\n\n  const handleOnClick = e => {\n    e.preventDefault();\n    doOCR();\n  };\n\n  setLogging(true);\n\n  const handleDownload = () => {\n    const doc = new jsPDF();\n    doc.text(ocr, 10, 10);\n    doc.addFileToVFS(\"MyFont.ttf\", myFont);\n    doc.addFont(\"MyFont.ttf\", \"MyFont\", \"normal\");\n    doc.save(\"OCR-APP_Result.pdf\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading center-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"OCR APP\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"fileupload\",\n    type: \"file\",\n    accept: \".jpg, .jpeg, .png\",\n    onChange: e => setFile(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    className: \"button btn-floating btn-large waves-effect waves-light red\",\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"done\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkBoxes \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"radio center-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"with-gap\",\n    name: \"group1\",\n    type: \"radio\",\n    value: \"hin\",\n    onChange: e => setLang(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Hindi\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"with-gap\",\n    name: \"group1\",\n    type: \"radio\",\n    value: \"eng\",\n    defaultChecked: true,\n    onChange: e => setLang(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"English\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"with-gap\",\n    name: \"group1\",\n    type: \"radio\",\n    value: \"mar\",\n    onChange: e => setLang(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Marathi\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, ocr), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"download btn-floating btn-medim waves-effect waves-light red \",\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 111\n    }\n  }, \"file_download\"))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Keval/tesseract.js-react-app/src/App.js"],"names":["React","useState","createWorker","recognize","setLogging","jsPDF","myFont","App","file","setFile","ocr","setOcr","lang","setLang","worker","logger","m","console","log","doOCR","load","loadLanguage","initialize","data","text","getPDF","handleOnClick","e","preventDefault","handleDownload","doc","addFileToVFS","addFont","save","target","files","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { createWorker, recognize, setLogging } from \"tesseract.js\";\r\nimport \"./App.css\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport myFont from \"/arial-unicode-ms.tff\";\r\n\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [ocr, setOcr] = useState(\"No File Selected\");\r\n  const [lang, setLang] = useState(\"eng\");\r\n\r\n  const worker = createWorker({\r\n    logger: (m) => console.log(m),\r\n\r\n  });\r\n \r\n  const doOCR = async () => {\r\n    await worker.load();\r\n    await worker.loadLanguage(lang);\r\n    await worker.initialize(lang);  \r\n    const {data: { text },} = await worker.recognize(file);           \r\n    setOcr(text);\r\n    worker.getPDF(\"Result\",true);\r\n  };\r\n  const handleOnClick = (e) => {\r\n    e.preventDefault();\r\n    doOCR();\r\n    \r\n  };\r\n  setLogging(true);\r\n\r\n\r\n \r\n  const handleDownload = () => {\r\n\r\n    const doc = new jsPDF();     \r\n    \r\n      doc.text(ocr, 10, 10);\r\n      doc.addFileToVFS(\"MyFont.ttf\", myFont);\r\n      doc.addFont(\"MyFont.ttf\", \"MyFont\", \"normal\");\r\n      doc.save(\"OCR-APP_Result.pdf\");\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading center-align\">\r\n        <h1>OCR APP</h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col s6\">\r\n          <div className=\"box\">\r\n            <form action=\"/\">\r\n              <input\r\n                className=\"fileupload\"\r\n                type=\"file\"\r\n                accept=\".jpg, .jpeg, .png\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n              />\r\n              <div className=\"preview\">\r\n                <img src={file} />\r\n              </div>\r\n              \r\n              <a\r\n                href=\"\"\r\n                className=\"button btn-floating btn-large waves-effect waves-light red\"\r\n                onClick={handleOnClick}\r\n              >\r\n                <i className=\"material-icons\">done</i>\r\n              </a>\r\n\r\n              <div className=\"checkBoxes \">\r\n                <div className=\"radio center-align\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col s4\">\r\n                      <label>\r\n                        <input\r\n                          className=\"with-gap\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          value=\"hin\"\r\n                          onChange={(e) => setLang(e.target.value)}\r\n                        />\r\n\r\n                        <span>Hindi</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                      <label>\r\n                        <input\r\n                          className=\"with-gap\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          value=\"eng\"\r\n                          defaultChecked\r\n                          onChange={(e) => setLang(e.target.value)}\r\n                        />\r\n\r\n                        <span>English</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                      <label>\r\n                        <input\r\n                          className=\"with-gap\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          value=\"mar\"\r\n                          onChange={(e) => setLang(e.target.value)}\r\n                        />\r\n                        <span>Marathi</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s6\">\r\n          <div className=\"box\">\r\n            <div className=\"output\">{ocr}</div>\r\n            <a class=\"download btn-floating btn-medim waves-effect waves-light red \" onClick={handleDownload}><i class=\"material-icons\">file_download</i></a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}